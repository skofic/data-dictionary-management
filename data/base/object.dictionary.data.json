[
    {
        "_code_nid": "_data",
        "_code_lid": "definition",
        "_code_gid": "_data_definition",
        "_code_aid": ["definition"],
        "_info_title": {"iso_639_3_eng": "Data definition"},
        "_info_definition": {"iso_639_3_eng": "Data container and type definitions."},
        "_info_description": {"iso_639_3_eng": "This *object data structure* defines the *type* and *organisation* of the *data value*. The data structure features *one* among the following properties:\n\n- `_data_container_scalar`: if *data* is a *scalar* value.\n- `_data_container_array`: if *data* is a *list* of values.\n- `_data_container_set`: if *data* is a *list* of *unique* values.\n- `_data_container_dict`: if *data* is a *key/value dictionary*.\n\nAny *term* that *features* this object is considered a *descriptor*."},
        "_info_examples": {"iso_639_3_eng": "```json\n{\n  \"_data_container_scalar\": {\n    \"_data_class\": \"_data_class_quantity\",\n    \"_data_type\": \"_data_type_integer\",\n    \"_data_min-range-inclusive\": 5,\n    \"_data_max-range-inclusive\": 10\n	}\n}\n```\n\nThis example describes a *scalar discrete integer* value in the range from `5` to `10` inclusive.\n\n```json\n{\n  \"_data_container_array\": {\n    \"_data_class\": \"_data_class_quantity\",\n    \"_data_type\": \"_data_type_number\",\n    \"_data_min-items\": 3,\n    \"_data_max-items\": 5,\n    \"_data_min-range-inclusive\": 0.0,\n    \"_data_max-range-exclusive\": 100.0,\n    \"_data_unit\": \"_data_unit_length_cm\"\n	}\n}\n```\n\nThis example describes an *array* of `3` to `5` *continuous quantitative* values *greater or equal* to `0.0` and *less than* `100.0` representing a *length* in *centimetres*.\n\n```json\n{  \n  \"_data_container_set\": {\n    \"_data_class\": \"_data_class_category\",\n    \"_data_type\": \"_data_type_enum\",\n    \"_data_kind\": \"iso_639_3\"\n	}\n}\n```\n\nThis example describes a *set* of *categorical strings*  that must be chosen from the *controlled vocabulary* of ISO 639 *language codes*.\n\n```json\n{\n  \"_data_container_dict\": {\n    \"_data_container_dict_key\": {\n      \"_data_class\": \"_data_class_category\",\n      \"_data_type\": \"_data_type_enum\",\n      \"_data_kind\": \"iso_639_3\"\n    },\n    \"_data_container_dict_value\": {\n      \"_data_container_array\": {\n        \"_data_class\": \"_data_class_other\",\n        \"_data_type\": \"_data_type_object\",\n        \"_data_kind\": \"some_object_definition\",\n        \"_data_min-items\": 5,\n        \"_data_max-items\": 10\n      }\n    }\n  }\n}\n```\n\nThis example describes a *key/value dictionary* in which *keys* must be chosen from the ISO languages *controlled vocabulary elements*, and *values* are an array of *object data structures* defined by the `some_object_definition` *object data structure type term*; the array of objects must contain a minimum of `5` items and a maximum of `10` items."},
        "_rule_required": {
            "_rule_selection-terms_one": [
            	"_data_container_scalar",
            	"_data_container_array",
            	"_data_container_set",
            	"_data_container_dict"
            ]
        }
    },
    
    {
        "_code_nid": "_data_definition",
        "_code_lid": "scalar",
        "_code_gid": "_data_definition_scalar",
        "_code_aid": ["scalar"],
        "_info_title": {"iso_639_3_eng": "Scalar data definition"},
        "_info_definition": {"iso_639_3_eng": "Data container and type definitions for scalar values."},
        "_info_description": {"iso_639_3_eng": "This *object data structure* defines the *type* and *organisation* of *scalar data values*. The data structure features the following properties:\n\n- `_data_class`: This *required* property indicates if the *data* is *categorical* or *quantitative*.\n- `_data_type`: This *required* property indicates the *data type *of the value, whether it is a number, string or other.\n- `_data_kind`: This property is *required* if the `_data_type` is an *enumeration* or *object*: it should reference respectively the *controlled vocabulary* or the *object data structure type terms*.\n- `_data_format`: If the data is *encoded* in a specific *format*, this enumerated field can be used to indicate the format.\n- `_data_unit`: If the data represents a *measurement*, this property can be used to indicate the *default unit*.\n- `_data_unit-name`: If the data unit is *not* in the *units controlled vocabulary*, it can be indicated by name in this field.\n- `_data_regexp`: This field can contain a *regular expression pattern* to validate the format of the data.\n- `_data_min-range-inclusive`: Minimum range bound inclusive.\n- `_data_max-range-inclusive`: Maximum range bound inclusive.\n- `_data_min-range-exclusive`: Minimum range bound exclusive.\n- `_data_max-range-exclusive`: Maximum range bound exclusive."},
        "_info_examples": {"iso_639_3_eng": "```json\n{\n  \"_data_container_scalar\": {\n    \"_data_class\": \"_data_class_quantity\",\n    \"_data_type\": \"_data_type_integer\",\n    \"_data_min-range-inclusive\": 5,\n    \"_data_max-range-inclusive\": 10\n    }\n}\n```\n\nThis example describes a *scalar discrete integer* value in the range from `5` to `10` inclusive.\n\n```json\n{\n  \"_data_container_scalar\": {\n    \"_data_class\": \"_data_class_quantity\",\n    \"_data_type\": \"_data_type_number\",\n    \"_data_min-range-inclusive\": 0.0,\n    \"_data_max-range-exclusive\": 100.0,\n    \"_data_unit\": \"_data_unit_length_cm\"\n    }\n}\n```\n\nThis example describes a **continuous quantitative* value *greater or equal* to `0.0` and *less than* `100.0` representing a *length* in *centimetres*.\n\n```json\n{  \n  \"_data_container_scalar\": {\n    \"_data_class\": \"_data_class_category\",\n    \"_data_type\": \"_data_type_enum\",\n    \"_data_kind\": \"iso_639_3\"\n    }\n}\n```\n\nThis example describes a *categorical string* that must be chosen from the *controlled vocabulary* of ISO 639 *language codes*.\n\n```json\n{  \n  \"_data_container_scalar\": {\n    \"_data_class\": \"_data_class_other\",\n    \"_data_type\": \"_data_type_string\",\n    \"_data_format\": \"_data_format_markdown\"\n    }\n}\n```\n\nThis example describes a *text* value *encoded* in *Markdown* format."},
        "_rule_required": {
            "_rule_selection-terms_all": [
            	"_data_class",
            	"_data_type"
            ]
        }
    },
    {
        "_code_nid": "_data_definition",
        "_code_lid": "array",
        "_code_gid": "_data_definition_array",
        "_code_aid": ["array"],
        "_info_title": {"iso_639_3_eng": "Array data definition"},
        "_info_definition": {"iso_639_3_eng": "Data container and type definitions for an array of values."},
        "_info_description": {"iso_639_3_eng": "This *object data structure* defines the *type* and *organisation* of *array data values*. An array is a list of values that may be repeated. The *type definitions* apply to the *array elements*, not the array itself. The data structure features the following properties:\n\n- `_data_class`: This *required* property indicates if the *array element values* are *categorical* or *quantitative*.\n- `_data_type`: This *required* property indicates the *data type* of the *array elements*, whether they are text, numbers or other.\n- `_data_kind`: This property is *required* if the `_data_type` is an *enumeration* or *object*: it should reference respectively the *controlled vocabulary* or the *object data structure type terms*.\n- `_data_format`: If the *array elements* are *encoded* in a specific *format*, this enumerated field can be used to indicate the format.\n- `_data_unit`: If the data represents a *measurement*, this property can be used to indicate the *default unit* of the *array values*.\n- `_data_unit-name`: If the data unit is *not* in the *units controlled vocabulary*, it can be indicated by name in this field.\n- `_data_regexp`: This field can contain a *regular expression pattern* to validate the format of the *array elements*.\n- `_data_min-items`: Minimum *number of items* in the *array*, the bound is *inclusive*.\n- `_data_max-items`: Maximum *number of items* in the *array*, the bound is *inclusive*.\n- `_data_min-range-inclusive`: Minimum range bound inclusive for *array element values*.\n- `_data_max-range-inclusive`: Maximum range bound inclusive for *array element values*.\n- `_data_min-range-exclusive`: Minimum range bound exclusive for *array element values*.\n- `_data_max-range-exclusive`: Maximum range bound exclusive for *array element values*."},
        "_info_examples": {"iso_639_3_eng": "```json\n{\n  \"_data_container_array\": {\n    \"_data_class\": \"_data_class_quantity\",\n    \"_data_type\": \"_data_type_integer\",\n    \"_data_min-items\": 3,\n    \"_data_min-items\": 5\n    }\n}\n```\n\nThis example describes a list of `3` to `5` *discrete integer quantitative* values.\n\n```json\n{\n  \"_data_container_array\": {\n    \"_data_class\": \"_data_class_quantity\",\n    \"_data_type\": \"_data_type_number\",\n    \"_data_min-range-inclusive\": 0.0,\n    \"_data_max-range-exclusive\": 100.0,\n    \"_data_unit\": \"_data_unit_length_cm\"\n    }\n}\n```\n\nThis example describes an *array* of *continuous quantitative* values *greater or equal* to `0.0` and *less than* `100.0` representing a *lengths* in *centimetres*.\n\n```json\n{  \n  \"_data_container_array\": {\n    \"_data_class\": \"_data_class_category\",\n    \"_data_type\": \"_data_type_enum\",\n    \"_data_kind\": \"iso_639_3\",\n    \"_data_min-items\": 2,\n    \"_data_min-items\": 2\n    }\n}\n```\n\nThis example describes a list of *categorical strings* that must be chosen from the *controlled vocabulary* of ISO 639 *language codes*, the list must have `2` elements.\n\n```json\n{  \n  \"_data_container_array\": {\n    \"_data_class\": \"_data_class_other\",\n    \"_data_type\": \"_data_type_string\",\n    \"_data_format\": \"_data_format_markdown\"\n    }\n}\n```\n\nThis example describes a *list* of *text* values *encoded* in *Markdown* format."},
        "_rule_required": {
            "_rule_selection-terms_all": [
            	"_data_class",
            	"_data_type"
            ]
        }
    },
    {
        "_code_nid": "_data_definition",
        "_code_lid": "set",
        "_code_gid": "_data_definition_set",
        "_code_aid": ["set"],
        "_info_title": {"iso_639_3_eng": "Set data definition"},
        "_info_definition": {"iso_639_3_eng": "Data container and type definitions for an array of unique values."},
        "_info_description": {"iso_639_3_eng": "This *object data structure* defines the *type* and *organisation* of an *array* of *unique data values*. A set is a list of values that must be unique. The *type definitions* apply to the *set elements*, not the set itself. The data structure features the following properties:\n\n- `_data_class`: This *required* property indicates if the *set element values* are *categorical* or *quantitative*.\n- `_data_type`: This *required* property indicates the *data type* of the *set elements*, whether they are text, numbers or other.\n- `_data_kind`: This property is *required* if the `_data_type` is an *enumeration* or *object*: it should reference respectively the *controlled vocabulary* or the *object data structure type terms*.\n- `_data_format`: If the *set elements* are *encoded* in a specific *format*, this enumerated field can be used to indicate the format.\n- `_data_unit`: If the data represents a *measurement*, this property can be used to indicate the *default unit* of the *set values*.\n- `_data_unit-name`: If the data unit is *not* in the *units controlled vocabulary*, it can be indicated by name in this field.\n- `_data_regexp`: This field can contain a *regular expression pattern* to validate the format of the *set elements*.\n- `_data_min-items`: Minimum *number of items* in the *set*, the bound is *inclusive*.\n- `_data_max-items`: Maximum *number of items* in the *set*, the bound is *inclusive*.\n- `_data_min-range-inclusive`: Minimum range bound inclusive for *set element values*.\n- `_data_max-range-inclusive`: Maximum range bound inclusive for *set element values*.\n- `_data_min-range-exclusive`: Minimum range bound exclusive for *set element values*.\n- `_data_max-range-exclusive`: Maximum range bound exclusive for *set element values*."},
        "_info_examples": {"iso_639_3_eng": "```json\n{\n  \"_data_container_set\": {\n    \"_data_class\": \"_data_class_quantity\",\n    \"_data_type\": \"_data_type_integer\",\n    \"_data_min-items\": 3,\n    \"_data_min-items\": 5\n    }\n}\n```\n\nThis example describes a set of `3` to `5` *discrete integer quantitative* values which must be *unique*.\n\n```json\n{\n  \"_data_container_set\": {\n    \"_data_class\": \"_data_class_quantity\",\n    \"_data_type\": \"_data_type_number\",\n    \"_data_min-range-inclusive\": 0.0,\n    \"_data_max-range-exclusive\": 100.0,\n    \"_data_unit\": \"_data_unit_length_cm\"\n    }\n}\n```\n\nThis example describes a *set* of *continuous quantitative* values *greater or equal* to `0.0` and *less than* `100.0` representing a *lengths* in *centimetres*, no length must be repeated.\n\n```json\n{  \n  \"_data_container_set\": {\n    \"_data_class\": \"_data_class_category\",\n    \"_data_type\": \"_data_type_enum\",\n    \"_data_kind\": \"iso_639_3\",\n    \"_data_min-items\": 2,\n    \"_data_min-items\": 2\n    }\n}\n```\n\nThis example describes a set of *categorical strings* that must be chosen from the *controlled vocabulary* of ISO 639 *language codes*, the list must have `2` elements and these must be different.\n\n```json\n{  \n  \"_data_container_set\": {\n    \"_data_class\": \"_data_class_other\",\n    \"_data_type\": \"_data_type_string\",\n    \"_data_format\": \"_data_format_markdown\"\n    }\n}\n```\n\nThis example describes a *set* of *text* values *encoded* in *Markdown* format, no two texts can be identical."},
        "_rule_required": {
            "_rule_selection-terms_all": [
            	"_data_class",
            	"_data_type"
            ]
        }
    },
    {
        "_code_nid": "_data_definition",
        "_code_lid": "dict",
        "_code_gid": "_data_definition_dict",
        "_code_aid": ["dict"],
        "_info_title": {"iso_639_3_eng": "Data dictionary definition"},
        "_info_definition": {"iso_639_3_eng": "Data container and type definitions for a key/value data dictionary."},
        "_info_description": {"iso_639_3_eng": "This *object data structure* defines the *type* and *organisation* of a *key/value dictionary*. The data structure features the following properties:\n\n- `_data_container_dict_key`: This *required* property provides the *data definition* for the *dictionary keys*.\n  \n\n- `_data_container_dict_value`: This *required* property provides the *data definition* for the *dictionary values*."},
        "_info_examples": {"iso_639_3_eng": "```json\n{\n    \"_data_container_dict_key\": {\n        \"_data_class\": \"_data_class_category\",\n        \"_data_type\": \"_data_type_enum\",\n        \"_data_kind\": \"iso_639_3\"\n    },\n    \"_data_container_dict_value\": {\n        \"_data_container_array\": {\n            \"_data_class\": \"_data_class_other\",\n            \"_data_type\": \"_data_type_object\",\n            \"_data_kind\": \"some_object_definition\",\n            \"_data_min-items\": 5,\n            \"_data_max-items\": 10\n        }\n    }\n}\n```\n\nThis example describes a *dictionary* whose *keys* are the *global identifiers* of the ISO 639 languages *controlled vocabulary elements*, and the values are *arrays* of *objects* that correspond to the `some_object_definition` *data structure type*; these *array* values must have a *minimum* of `5` elements and a *maximum* of `10` elements.\n\n```json\n{\n    \"_data_container_dict_key\": {\n        \"_data_class\": \"_data_class_other\",\n        \"_data_type\": \"_data_type_string\"\n    },\n    \"_data_container_dict_value\": {\n        \"_data_container_scalar\": {\n            \"_data_class\": \"_data_class_other\",\n            \"_data_type\": \"_data_type_string\",\n            \"_data_format\": \"_data_format_markdown\"\n        }\n    }\n}\n```\n\nThis example describes a *dictionary* whose *keys* are *plain strings* and *values* are *text* in *Markdown* format. It implements a multilingual styled text\n\n```json\n{\n    \"_data_container_dict_key\": {\n        \"_data_class\": \"_data_class_category\",\n        \"_data_type\": \"_data_type_enum\",\n        \"_data_kind\": \"iso_3166_1\"\n    },\n    \"_data_container_dict_value\": {\n        \"_data_container_dict\": {\n            \"_data_container_dict_key\": {\n                \"_data_class\": \"_data_class_category\",\n                \"_data_type\": \"_data_type_enum\",\n                \"_data_kind\": \"iso_639_3\"\n            },\n            \"_data_container_dict_value\": {\n                \"_data_container_array\": {\n                    \"_data_class\": \"_data_class_other\",\n                    \"_data_type\": \"_data_type_object\",\n                    \"_data_kind\": \"some_object_definition\",\n                    \"_data_min-items\": 5,\n                    \"_data_max-items\": 10\n                }\n            }\n        }\n    }\n}\n```\n\nThis example describes a *dictionary* whose *keys* are the *global identifiers* of the ISO 3166 country *controlled vocabulary elements*, and the values are *another dictionary* whose keys are ISO 639 languages and whose *values* are *arrays* that correspond to the `some_object_definition` *data structure type*; these *array* values must have a *minimum* of `5` elements and a *maximum* of `10` elements. This is an example of a recursive dictionary definition."},
        "_rule_required": {
            "_rule_selection-terms_all": [
            	"_data_container_dict_key",
            	"_data_container_dict_value"
            ]
        }
    },
    
    {
        "_code_nid": "_data_definition",
        "_code_lid": "key",
        "_code_gid": "_data_definition_key",
        "_code_aid": ["key"],
        "_info_title": {"iso_639_3_eng": "key data definition"},
        "_info_definition": {"iso_639_3_eng": "Data container and type definitions for keys or attributes."},
        "_info_description": {"iso_639_3_eng": "This *object data structure* defines the *type* and *organisation* of *dictionary keys*. Dictionary keys are *strings* by *default*. The data structure features the following properties:\n\n- `_data_class`: This *required* property indicates if the *dictionary key value* is *categorical* or *quantitative*.\n- `_data_type_key`: This *required* property indicates the *data type* of the key, it is by *default* a *string*, but may also be an *enumeration*.\n- `_data_kind`: This property is *required* if the `_data_type_key` is an *enumeration: it should reference the *controlled vocabulary type term*.\n- `_data_format`: If the *key value* is *encoded* in a specific *format*, this enumerated field can be used to indicate the format.\n- `_data_unit`: If the *dictionary key* represents a *measurement unit*, this property can be used to indicate it.\n- `_data_unit-name`: If the unit is *not* in the *units controlled vocabulary*, it can be indicated by name in this field.\n- `_data_regexp`: This field can contain a *regular expression pattern* to validate the format of the dictionary key."},
        "_info_examples": {"iso_639_3_eng": "```json\n{\n    \"_data_class\": \"_data_class_other\",\n    \"_data_type\": \"_data_type_string\"\n}\n```\n\nThis example describes *data dictionary* string *key*, any *string* value is allowed.\n\n```json\n{  \n    \"_data_class\": \"_data_class_category\",\n    \"_data_type\": \"_data_type_enum\",\n    \"_data_kind\": \"iso_639_3\"\n}\n```\n\nThis example describes a data dictionary key that must be chosen among the ISO 639 *language codes*, the value will be the *global identifier* of the *controlled vocabulary element*.\n\n```json\n{  \n    \"_data_class\": \"_data_class_other\",\n    \"_data_type\": \"_data_type_string\",\n    \"_data_regexp\": \"^[A-Z]{3}[0-9]{5}\"\n}\n```\n\nThis example describes a *dictionary key* formatted as a *string* constituted by `3` *uppercase alphabetic characters* and a `5` *digits* sequence."},
        "_rule_required": {
            "_rule_selection-terms_all": [
            	"_data_class",
            	"_data_type_key"
            ]
        }
    },
]