[
    {
        "_codes_nid": "",
        "_codes_lid": "id",
        "_codes_gid": "_id",
        "_codes_fid": "_id",
        "_codes_aid": ["id"],
        "_docs_label": {"iso_639_3_eng": "Document handle"},
        "_docs_definition": {"iso_639_3_eng": "The *document handle* is the record unique identifier in [ArangoDB](https://www.arangodb.com), the default database for this data dictionary. This value is automatically created when a record is inserted, it cannot be modified or set by users and it has the following format: `<collection name>/<_key value>`."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_record",
        "_data_rules": [
           "_enum_data_rules_immutable",
           "_enum_data_rules_locked"
        ]
    },
    {
        "_codes_nid": "",
        "_codes_lid": "rev",
        "_codes_gid": "_rev",
        "_codes_fid": "_rev",
        "_codes_aid": ["rev"],
        "_docs_label": {"iso_639_3_eng": "Document revision"},
        "_docs_definition": {"iso_639_3_eng": "Record revision number."},
        "_docs_description": {"iso_639_3_eng": "The *document revision* is the record revision number in [ArangoDB](https://www.arangodb.com), the default database for this data dictionary. This value is *fully managed* by the *database* and the user can only *read* its value."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_string",
        "_data_rules": [
           "_enum_data_rules_immutable",
           "_enum_data_rules_locked"
        ]
    },
    {
        "_codes_nid": "",
        "_codes_lid": "key",
        "_codes_gid": "_key",
        "_codes_fid": "_key",
        "_codes_aid": ["key"],
        "_docs_label": {"iso_639_3_eng": "Document key"},
        "_docs_definition": {"iso_639_3_eng": "The unique identifier of the document within its collection."},
        "_docs_description": {"iso_639_3_eng": "The *document key* is the record *unique identifier* *within* a *collection* in [ArangoDB](https://www.arangodb.com), the default database for this data dictionary. It is a string that can either be provided by the user, or, if omitted, will be automatically generated by the database."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_string",
        "_data_regexp": "^[a-zA-Z0-9-:.@+,=;$!*'%]{1,254}$",
        "_data_rules": [
            "_enum_data_rules_immutable"
        ]
    },
    {
        "_codes_nid": "",
        "_codes_lid": "from",
        "_codes_gid": "_from",
        "_codes_fid": "_from",
        "_codes_aid": ["from"],
        "_docs_label": {"iso_639_3_eng": "Relationship source"},
        "_docs_definition": {"iso_639_3_eng": "In a *directed graph* this field references the node *from* which the relationship *originates*, the *from*."},
        "_docs_description": {"iso_639_3_eng": "The relationship must *point* to the *database address* of the relationship *source term*, this means that the actual value depends on the *actual database implementation*. In [ArangoDB](https://www.arangodb.com) the value is the [_id](https://www.arangodb.com/docs/stable/getting-started-databases-collections-documents.html) of the source term."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_record",
        "_data_rules": [
            "_enum_data_rules_required",
            "_enum_data_rules_immutable"
        ]
    },
    {
        "_codes_nid": "",
        "_codes_lid": "to",
        "_codes_gid": "_to",
        "_codes_fid": "_to",
        "_codes_aid": ["to"],
        "_docs_label": {"iso_639_3_eng": "Relationship target"},
        "_docs_definition": {"iso_639_3_eng": "In a *directed graph* this field references the node *towards* which the relationship *points*, the *to*."},
        "_docs_description": {"iso_639_3_eng": "The relationship must *point* to the *database address* of the relationship *target term*, this means that the actual value depends on the *actual database implementation*. In [ArangoDB](https://www.arangodb.com) the value is the [_id](https://www.arangodb.com/docs/stable/getting-started-databases-collections-documents.html) of the destination term."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_record",
        "_data_rules": [
            "_enum_data_rules_required",
            "_enum_data_rules_immutable"
        ]
    },
    
    {
        "_codes_nid": "_codes",
        "_codes_lid": "unit",
        "_codes_gid": "_codes_unit",
        "_codes_fid": "_codes_unit",
        "_codes_aid": ["unit"],
        "_docs_label": {"iso_639_3_eng": "Data provider unit"},
        "_docs_definition": {"iso_639_3_eng": "Name of the unit that provided the metadata or curates the data."},
        "_docs_description": {"iso_639_3_eng": "This field should provide the name or *reference* of the *institute* or *unit* that provided the *metadata* or that is in charge of the data *curation*. This value will be used as a categorical value to group data provider units. This value will be used as a categorical value to group data providers.\n\nYou should tread this data as a category: use the same value for the same provider unit."},
        "_data_class": "_enum_data_classes_category",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_string"
    },
    {
        "_codes_nid": "_codes",
        "_codes_lid": "provider",
        "_codes_gid": "_codes_provider",
        "_codes_fid": "_codes_provider",
        "_codes_aid": ["provider"],
        "_docs_label": {"iso_639_3_eng": "Data provider"},
        "_docs_definition": {"iso_639_3_eng": "Name or reference of the contact that provided the metadata or curates the data."},
        "_docs_description": {"iso_639_3_eng": "This field should provide the name or *reference* of the *person* that provided the *metadata* or that is in charge of the data *curation*. This value will be used as a categorical value to group data providers.\n\nYou should tread this data as a category: use the same value for the same provider."},
        "_data_class": "_enum_data_classes_category",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_string"
    },   
    {
        "_codes_nid": "_codes",
        "_codes_lid": "nid",
        "_codes_gid": "_codes_nid",
        "_codes_fid": "_codes_nid",
        "_codes_aid": ["nid"],
        "_docs_label": {"iso_639_3_eng": "Namespace identifier"},
        "_docs_definition": {"iso_639_3_eng": "The local identifier's namespace."},
        "_docs_description": {"iso_639_3_eng": "Terms are *uniquely identified* by their *global identifier*, which is the concatenation of the *namespace identifier*, this field, and the *local identifier*, separated by a *token*.\n\nThis field is *optional*, but any term which *does not* have a namespace will be considered a *root level namespace*. Once set, or omitted, no change can be made to this field."},
        "_docs_examples": {"iso_639_3_eng": "`iso.org`: Root level namespace for the ISO standards.\n\n`iso.org/3166-1/alpha-2`: Namespace for the ISO 3166-1 2-character country codes."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_term",
        "_data_rules": ["_enum_data_rules_immutable"]
    },
    {
        "_codes_nid": "_codes",
        "_codes_lid": "lid",
        "_codes_gid": "_codes_lid",
        "_codes_fid": "_codes_lid",
        "_codes_aid": ["lid"],
        "_docs_label": {"iso_639_3_eng": "Local identifier"},
        "_docs_definition": {"iso_639_3_eng": "The unique identifier of the term, within its namespace."},
        "_docs_description": {"iso_639_3_eng": "Terms are *uniquely identified* by their *global identifier*, which is the concatenation of the *namespace identifier* and the *local identifier*, this field, separated by a *token*.\n\nThis field is *required* and must be *unique* within its namespace. The code should *not include* characters that are *not allowed* in *variables* or *database fields*. Once set, the value cannot be changed."},
        "_docs_examples": {"iso_639_3_eng": "`it`: This local identifier could be the code for the Italian language with the `iso.org/639-1` namespace, or the code for Italy with the `iso.org/3166-1/alpha-2` namespace. The global identifiers would be respectively `iso.org/639-1/it` and `iso.org/3166-1/alpha-2/it`."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_string",
        "_data_regexp": "^[a-zA-Z0-9-:.@+,=;$!*'%]{1,254}$",
        "_data_rules": [
            "_enum_data_rules_required",
            "_enum_data_rules_immutable"
        ]
    },
    {
        "_codes_nid": "_codes",
        "_codes_lid": "gid",
        "_codes_gid": "_codes_gid",
        "_codes_fid": "_codes_gid",
        "_codes_aid": ["gid"],
        "_docs_label": {"iso_639_3_eng": "Global identifier"},
        "_docs_definition": {"iso_639_3_eng": "The unique identifier of the term within the data dictionary."},
        "_docs_description": {"iso_639_3_eng": "Terms are *uniquely identified* by their *global identifier*, this field, which is the concatenation of the *namespace identifier* and the *local identifier*, separated by a *token*.\n\nThis field is *required* and, once set, cannot be modified."},
        "_docs_examples": {"iso_639_3_eng": "`iso.org/639-1/it`: This would be the global identifier for the ISO 639-1 Italian language code, constituted by the `iso.org/639-1` namespace and the `it` local identifier.\n\n`iso.org/3166-1/alpha-2/it`: This would be the global identifier for the ISO 3166-1 2-character code for Italy, constituted by the `iso.org/3166-1/alpha-2` namespace and the `it` local identifier."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_string",
        "_data_rules": [
            "_enum_data_rules_required",
            "_enum_data_rules_immutable"
        ]
    },
    {
        "_codes_nid": "_codes",
        "_codes_lid": "aid",
        "_codes_gid": "_codes_aid",
        "_codes_fid": "_codes_aid",
        "_codes_aid": ["aid"],
        "_docs_label": {"iso_639_3_eng": "All identifiers"},
        "_docs_definition": {"iso_639_3_eng": "List of local identifiers by which the item can be selected."},
        "_docs_description": {"iso_639_3_eng": "This list should collect all *identifiers* that could be used to *reference the term*.\n\nIn the case of *variables*, these identifiers may be useful to *match the descriptor* when receiving external datasets.\n\nIn the case of *enumerations*, the list should include all *alternative codes* that correspond to the *current local identifier*:. In all cases, the *local identifier* must be *included* in the list."},
        "_docs_examples": {"iso_639_3_eng": "`stemp`: *soil temperature.*\n\n`soilTemp`: *soil temperature.*\n\n`soil_temperature`: *soil temperature.*\n\nLocal identifier `ITA` alternate identifiers `I`, `IT`: `ITA` is the preferred code, but when searching we also look for `I` or `IT`."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_set",
        "_data_type": "_enum_data_types_string"
    },
    {
        "_codes_nid": "_codes",
        "_codes_lid": "fid",
        "_codes_gid": "_codes_fid",
        "_codes_fid": "_codes_fid",
        "_codes_aid": ["fid"],
        "_docs_label": {"iso_639_3_eng": "Field name"},
        "_docs_definition": {"iso_639_3_eng": "Descriptor field name, the identifier must be unique among all descriptors."},
        "_docs_description": {"iso_639_3_eng": "This identifier will be used as the data dictionary *property name* and as the database *field name* for external data. It should *only* be used for *descriptors*. The value should *only* contain *characters* that are *allowed* in *field names*. This identifier will be *used* to tag table headers and object properties when *sharing data*, it also will be used as the field name in the *data dictionary*, the *value* must be *unique* among all *descriptors*."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_string"
    },
    {
        "_codes_nid": "_codes",
        "_codes_lid": "pid",
        "_codes_gid": "_codes_pid",
        "_codes_fid": "_codes_pid",
        "_codes_aid": ["pid"],
        "_docs_label": {"iso_639_3_eng": "Provider identifier"},
        "_docs_definition": {"iso_639_3_eng": "The descriptor's identifier given by the provider."},
        "_docs_description": {"iso_639_3_eng": "This corresponds to the *identifier* that the *metadata provider* or *curator* has *assigned* to the *descriptor*."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_string"
    },
    {
        "_codes_nid": "_codes",
        "_codes_lid": "sid",
        "_codes_gid": "_codes_sid",
        "_codes_fid": "_codes_sid",
        "_codes_aid": ["sid"],
        "_docs_label": {"iso_639_3_eng": "Symbol"},
        "_docs_definition": {"iso_639_3_eng": "*International* or *commonly agreed symbol* for the term, if available."},
        "_docs_description": {"iso_639_3_eng": "This value should reflect the *symbol* that *references* the *term*, but that is *not used* as an *identifier*. It should be a *commonly agreed* upon *standard*, something you would *expect* the term to be *named*, if such a symbol exists."},
        "_docs_examples": {"iso_639_3_eng": "`km`.: The symbol for kilometers.\n\n`ISBN`: The symbol for the ISBN code."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_string"
    },
    {
        "_codes_nid": "_codes",
        "_codes_lid": "pid",
        "_codes_gid": "_codes_pid",
        "_codes_fid": "_codes_pid",
        "_codes_aid": ["pid"],
        "_docs_label": {"iso_639_3_eng": "Provided identifier"},
        "_docs_definition": {"iso_639_3_eng": "The identifier that was provided with the metadata or data."},
        "_docs_description": {"iso_639_3_eng": "This is the *identifier* or *field name* that was assigned to the *term* or *descriptor* by the *curator* or *provider* of the *data* or *metadata*. This identifier can be used by the *same provider* when *sending data* to the information system."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_string",
        "_data_rules": ["_enum_data_rules_required"]
    },
    {
        "_codes_nid": "_codes",
        "_codes_lid": "name",
        "_codes_gid": "_codes_name",
        "_codes_fid": "_codes_name",
        "_codes_aid": ["name"],
        "_docs_label": {"iso_639_3_eng": "Local name"},
        "_docs_definition": {"iso_639_3_eng": "Native or original name."},
        "_docs_description": {"iso_639_3_eng": "This field should be used to *record* the *identifier* or *name* originally used to *refer* to the *instance* of the *descriptor*. This is generally used to record the *name* in the *native language* without needing to reference the actual language."},
        "_docs_examples": {"iso_639_3_eng": "`粵語 / 粤语`: The *original* name for the *cantonese language* in the *cantonese* language."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_string"
    },
    
    {
        "_codes_nid": "_data",
        "_codes_lid": "class",
        "_codes_gid": "_data_class",
        "_codes_fid": "_data_class",
        "_codes_aid": ["class"],
        "_docs_label": {"iso_639_3_eng": "Data classification"},
        "_docs_definition": {"iso_639_3_eng": "The classification of the descriptor's values."},
        "_docs_description": {"iso_639_3_eng": "The value is a [controlled vocabulary](/enum/data/classes) element that should *classify* the *nature* of the descriptor's *values*. This field should indicate whether the descriptor expresses [coded](/enum/data/classes/code), [categorical](/enum/data/classes/category) or [quantitative](/enum/data/classes/quantity) values."},
        "_docs_examples": {"iso_639_3_eng": "[`code`](/enum/data/classes/code): *Identifiers*, *names* and *text* are examples of *code* values.\n\n[`category`](/enum/data/classes/category): *Months*, *sex* and *nations* are examples of *categorical* values.\n\n[`quantity`](/enum/data/classes/quantity): A person's height, weight and the number of people that live in Denmark are examples of *quantitative* values."},
        "_data_class": "enum_data_classes_category",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_enum",
        "_data_kind": ["_enum_data_classes"],
        "_data_rules": [
            "_enum_data_rules_required",
            "_enum_data_rules_immutable"
        ]
    },
    {
        "_codes_nid": "_data",
        "_codes_lid": "container",
        "_codes_gid": "_data_container",
        "_codes_fid": "_data_container",
        "_codes_aid": ["container"],
        "_docs_label": {"iso_639_3_eng": "Data container"},
        "_docs_definition": {"iso_639_3_eng": "Data shape or container"},
        "_docs_description": {"iso_639_3_eng": "This field defines how the *descriptor's value* is *shaped* and to *which part* of the *value* the [data type](/data/type) applies."},
        "_docs_examples": {"iso_639_3_eng": "[`scalar`](/enum/data/container/scalar): The descriptor *value* is *scalar*, the [data type](/data/type) applies to the *whole value*.\n\n[`list`](/enum/data/container/list): The descriptor *value* is an *array of elements*, the [data type](/data/type) applies to the *elements*; the array *can contain repeating elements*.\n\n[`set`](/enum/data/container/set): The descriptor *value* is an *array of elements*, the [data type](/data/type) applies to the *elements*; the array *cannot contain repeating elements*.\n\n[`dict`](/enum/data/container/dict): The descriptor *value* is a *key/value dictionary*, the [data type](/data/type) defines to *value part* of the dictionary.\n\n[`range`](/enum/data/containers/range): A *range* of values between a *minimum* and *maximum* value, the [data type](/data/type) defines the range values *type* and can be [integer](/enum/data/types/int), for *discrete* ranges, or [float](/enum/data/types/float) for *continuous* ranges."},
        "_data_class": "enum_data_classes_category",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_enum",
        "_data_kind": ["_enum_data_containers"],
        "_data_rules": [
            "_enum_data_rules_required",
            "_enum_data_rules_immutable"
        ]
    },
    {
        "_codes_nid": "_data",
        "_codes_lid": "type",
        "_codes_gid": "_data_type",
        "_codes_fid": "_data_type",
        "_codes_aid": ["type"],
        "_docs_label": {"iso_639_3_eng": "Data type"},
        "_docs_definition": {"iso_639_3_eng": "Primitive data type of the descriptor."},
        "_docs_description": {"iso_639_3_eng": "This field defines the *data type* of the *descriptor's value*. This category applies to the *whole value* if the [data container](/enum/data/containers) is [scalar](/enum/data/containers/scalar), to the *elements* of the *array* if the [data container](/enum/data/containers) is [list](/enum/data/containers/list) or [set](/enum/data/containers/set) and to the *value part* if the [data container](/enum/data/containers) is a [key/value dictionary](/enum/data/containers/dict)."},
        "_docs_examples": {"iso_639_3_eng": "[`any`](/enum/data/types/any): Value can be [`bool`](/enum/data/types/bool), [`int`](/enum/data/types/int), [`float`](/enum/data/types/float) or [`string`](/enum/data/types/string).\n\n[`bool`](/enum/data/types/bool): Boolean value.\n\n[`int`](/enum/data/types/int): Integer numeric discrete value.\n\n[`float`](/enum/data/types/float): Floating point continuous numeric value.\n\n[`string`](/enum/data/types/string): String of UTF-8 characters.\n\n[`term`](/enum/data/types/term): String containing the [global identifier](/codes/gid) of a data dictionary term.\n\n[`record`](/enum/data/types/record): Reference to a specific record in the database, including the collection or table reference. *Is database specific*. \n\n[`stamp`](/enum/data/types/stamp): Timestamp in database native format.\n\n[`enum`](/enum/data/types/enum): Controlled vocabulary. If you provide the enumeration term in the [data kind](/data/kind) field, the value must be the [local identifier](/codes/lid) of one of the elements of the controlled vocabulary; if you omit the [data kind](/data/kind), the value can be any [global identifier](/codes/gid) of an enumeration element.\n\n[`struct`](/enum/data/types/struct): Data structure or object. You can indicate in the [data kind](/data/kind) field the expected structure, if the field is omitted, any structure will be expected."},
        "_data_class": "enum_data_classes_category",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_enum",
        "_data_kind": ["_enum_data_types"],
        "_data_rules": [
            "_enum_data_rules_required",
            "_enum_data_rules_immutable"
        ]
    },
    {
        "_codes_nid": "_data",
        "_codes_lid": "format",
        "_codes_gid": "_data_format",
        "_codes_fid": "_data_format",
        "_codes_aid": ["format"],
        "_docs_label": {"iso_639_3_eng": "Data format"},
        "_docs_definition": {"iso_639_3_eng": "The format or encoding of the data."},
        "_docs_description": {"iso_639_3_eng": "This field can be used to indicate that the *value* is *formatted* or *encoded*. The idea is to implement backend functions to validate data provided in the format and handle appropriately the format when returning the data to the user, such as displaying styled text when handling *markdown* or *html*."},
        "_docs_examples": {"iso_639_3_eng": "[`markdown`](/enum/data/formats/markdown): [Markdown](https://en.wikipedia.org/wiki/Markdown) formatted string.\n\n[`html`](/enum/data/formats/html): [HyperText](https://en.wikipedia.org/wiki/HTML) markdown formatted string.\n\n[`uri`](/enum/data/formats/uri): [Uniform Resource Identifier](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier).\n\n[`hex`](/enum/data/formats/hex): This option indicates that the value should be treated as a [hexadecimal](https://en.wikipedia.org/wiki/Hexadecimal) value."},
        "_data_class": "enum_data_classes_category",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_enum",
        "_data_kind": ["enum_data_formats"],
        "_data_rules": ["_enum_data_rules_immutable"]
    },
    {
        "_codes_nid": "_data",
        "_codes_lid": "kind",
        "_codes_gid": "_data_kind",
        "_codes_fid": "_data_kind",
        "_codes_aid": ["kind"],
        "_docs_label": {"iso_639_3_eng": "Type reference"},
        "_docs_definition": {"iso_639_3_eng": "Global identifier of the controlled vocabulary, structure or enumeration for the key/value dictionary keys."},
        "_docs_description": {"iso_639_3_eng": "This field is only used if the [data type](/data/type) is an [enumeration](/enum/data/types/enum) or [structure](/enum/data/types/struct), or if the [data container](/data/container) is a key/value [dictionary](/enum/data/containers/dict).\n\nIf the data type is [`enum`](/enum/data/types/enum), this field can contain the referenced controlled vocabulary term [global identifier](/codes/gid): in that case the value can only contain members of the referenced enumeration. If the [data type](/data/type) is [`struct`](/enum/data/types/struct), this field can contain the structure's term [global identifier](/codes/gid): in that case the descriptor's value is expected to be an instance of that structure. If this field is omitted, the value may be an element of any controlled vocabulary, if the [data type](/data/type) is [`enum`](/enum/data/types/enum), or any structure if the [data type](/data/type) is [`struct`](/enum/data/types/struct).\n\nIf the data container is [`dict`](/enum/data/containers/dict), this field may contain the [global identifier](/codes/gid) of a controlled vocabulary, in that case the keys of the dictionary are expected to be [local identifiers](/codes/lid) of the enumeration elements. If this field is omitted, the keys are assumed to be strings."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_set",
        "_data_type": "_enum_data_types_term",
        "_data_rules": ["_enum_data_rules_immutable"]
    },
    {
        "_codes_nid": "_data",
        "_codes_lid": "unit",
        "_codes_gid": "_data_unit",
        "_codes_fid": "_data_unit",
        "_codes_aid": ["unit"],
        "_docs_label": {"iso_639_3_eng": "Data unit"},
        "_docs_definition": {"iso_639_3_eng": "Preferred measurement unit for the values of the descriptor."},
        "_docs_description": {"iso_639_3_eng": "The field represents the *default unit* for the *values* of the descriptor. This means that when storing values, these should be *converted* to this *default unit*."},
        "_docs_examples": {"iso_639_3_eng": "[`gram`](/enum/data/units/weight/gram): Grams weight unit.\n\n[`centimeter`](/enum/data/units/length/centimeter): Centimeters length unit.\n\n[`hour`](/enum/data/units/time/hour): Hours time unit."},
        "_data_class": "enum_data_classes_category",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_enum",
        "_data_kind": ["_enum_data_units"],
        "_data_rules": ["_enum_data_rules_immutable"]
    },
    {
        "_codes_nid": "_data",
        "_codes_lid": "size",
        "_codes_gid": "_data_size",
        "_codes_fid": "_data_size",
        "_codes_aid": ["size"],
        "_docs_label": {"iso_639_3_eng": "Container size"},
        "_docs_definition": {"iso_639_3_eng": "Data container elements count range."},
        "_docs_description": {"iso_639_3_eng": "This field is relevant only for [list](/enum/data/containers/list) or [set](/enum/data/containers/set) [containers](/data/container). This field indicates the *minimum* and *maximum* number of *elements* the descriptor's *value* can hold. The value is organised as an *array* in which the *first* value is the *minimum* count and the *second* element is the *maximum* count. If any of the two values is zero, this means that the corresponding bound has no limit."},
        "_docs_examples": {"iso_639_3_eng": "`[2, 7]`: An array with at least 2 elements and at most 7 elements.\n\n`[2, 2]`: An array with 2 elements.\n\n`[2, 0]`: An array with at least 2 elements.\n\n`[0, 7]`: An array with at most 7 elements.\n\nNote that the zero value is used as a wildcard, if you want to indicate a list that can have zero elements, do not add the [required](/enum/data/rules/required) [rule](/data/rules)."},
        "_data_class": "enum_data_classes_quantity",
        "_data_container": "_enum_data_containers_list",
        "_data_size": [
            2,
            2
        ],
        "_data_type": "_enum_data_types_int",
        "_data_rules": ["_enum_data_rules_immutable"]
    },
    {
        "_codes_nid": "_data",
        "_codes_lid": "vdrange",
        "_codes_gid": "_data_vdrange",
        "_codes_fid": "_data_vdrange",
        "_codes_aid": ["vdrange"],
        "_docs_label": {"iso_639_3_eng": "Valid discrete data range"},
        "_docs_definition": {"iso_639_3_eng": "Valid discrete range for data values."},
        "_docs_description": {"iso_639_3_eng": "This field can be used to indicate the *valid range* for *discrete* data: values that fall out of this range are considered *errors*.\n\nThis field is relevant if the *data type* is`int`."},
        "_docs_examples": {"iso_639_3_eng": "`[-5, true, 20, false]`: A range including `-5` and up to less than `20`. A value of `-5` is valid, `10` is valid and `20` is an error.\n\n`[3, false, 20, true]`: A range above `3` up to `20` included. A value of `3` is an error, `20` is valid and `21` is an error.\n\n`[null, true, 20, false]`: A range below `20`. A value of `19` is valid, a value of `20` is an error.\n\n`[3, true, null, true]`: A range above and including `3`. A value of `3` is valid, `2` is an error."},
        "_data_class": "enum_data_classes_quantity",
        "_data_container": "_enum_data_containers_range",
        "_data_type": "_enum_data_types_int"
    },
    {
       "_codes_nid": "_data",
        "_codes_lid": "vcrange",
        "_codes_gid": "_data_vcrange",
        "_codes_fid": "_data_vcrange",
        "_codes_aid": ["vcrange"],
        "_docs_label": {"iso_639_3_eng": "Valid continuous data range"},
        "_docs_definition": {"iso_639_3_eng": "Valid continuous range for data values."},
        "_docs_description": {"iso_639_3_eng": "This field can be used to indicate the *valid range* for *continuous* data: values that fall out of this range are considered *errors*.\n\nThis field is relevant if the *data type* is`float`."},
        "_docs_examples": {"iso_639_3_eng": "`[-5.0, true, 20.0, false]`: A range including `-5.0` and up to less than `20.0`. A value of `-5.0` is valid, `10` is valid and `20.0` is an error.\n\n`[3.2, false, 20.9, true]`: A range above `3.2` up to `20.9` included. A value of `3.2` is an error, `20.9` is valid and `20.91` is an error.\n\n`[null, true, 20.2, false]`: A range below `20.2`. A value of `20.19` is valid, a value of `20.2` is an error.\n\n`[3.7, true, null, true]`: A range above and including `3.7`. A value of `3.7` is valid, `3.6` is an error."},
        "_data_class": "enum_data_classes_quantity",
        "_data_container": "_enum_data_containers_range",
        "_data_type": "_enum_data_types_float"
    },
    {
        "_codes_nid": "_data",
        "_codes_lid": "ndrange",
        "_codes_gid": "_data_ndrange",
        "_codes_fid": "_data_ndrange",
        "_codes_aid": ["ndrange"],
        "_docs_label": {"iso_639_3_eng": "Normal discrete data range"},
        "_docs_definition": {"iso_639_3_eng": "Normal discrete range for data values."},
        "_docs_description": {"iso_639_3_eng": "This field can be used to indicate the *normal range* for *discrete* data: values that fall out of this range are considered *outliers*.\n\nThis field is relevant if the *data type* is`int`."},
        "_docs_examples": {"iso_639_3_eng": "`[-5, true, 20, false]`: A range including `-5` and up to less than `20`. A value of `-5` is normal, `10` is normal and `20` is an outlier.\n\n`[3, false, 20, true]`: A range above `3` up to `20` included. A value of `3` is an outlier, `20` is valid and `21` is an outlier.\n\n`[null, true, 20, false]`: A range below `20`. A value of `19` is normal, a value of `20` is an outlier.\n\n`[3, true, null, true]`: A range above and including `3`. A value of `3` is normal, `2` is an outlier."},
        "_data_class": "enum_data_classes_quantity",
        "_data_container": "_enum_data_containers_range",
        "_data_type": "_enum_data_types_int"
    },
    {
       "_codes_nid": "_data",
        "_codes_lid": "ncrange",
        "_codes_gid": "_data_ncrange",
        "_codes_fid": "_data_ncrange",
        "_codes_aid": ["ncrange"],
        "_docs_label": {"iso_639_3_eng": "Normal continuous data range"},
        "_docs_definition": {"iso_639_3_eng": "Normal continuous range for data values."},
        "_docs_description": {"iso_639_3_eng": "This field can be used to indicate the *normal range* for *continuous* data: values that fall out of this range are considered *outliers*.\n\nThis field is relevant if the *data type* is`float`."},
        "_docs_examples": {"iso_639_3_eng": "`[-5.0, true, 20.0, false]`: A range including `-5.0` and up to less than `20.0`. A value of `-5.0` is normal, `10` is normal and `20.0` is an outlier.\n\n`[3.2, false, 20.9, true]`: A range above `3.2` up to `20.9` included. A value of `3.2` is an outlier, `20.9` is normal and `20.91` is an outlier.\n\n`[null, true, 20.2, false]`: A range below `20.2`. A value of `20.19` is normal, a value of `20.2` is an outlier.\n\n`[3.7, true, null, true]`: A range above and including `3.7`. A value of `3.7` is normal, `3.6` is an outlier."},
        "_data_class": "enum_data_classes_quantity",
        "_data_container": "_enum_data_containers_range",
        "_data_type": "_enum_data_types_float"
    },
    {
        "_codes_nid": "_data",
        "_codes_lid": "regexp",
        "_codes_gid": "_data_regexp",
        "_codes_fid": "_data_regexp",
        "_codes_aid": ["regexp"],
        "_docs_label": {"iso_639_3_eng": "Validation pattern"},
        "_docs_definition": {"iso_639_3_eng": "Regular expression for validating the value."},
        "_docs_description": {"iso_639_3_eng": "This field can be used to *ensure* that [string](/enum/data/types/string) values have the *correct* *format*, use a *matching regular expression pattern*."},
        "_docs_examples": {"iso_639_3_eng": "`the.\\*fox`: Will match \u201c*the quick brown fox*\u201d.\n\n`^[A-Z]{3}[0-9]{4}$*`: Will match \u201c*ITA1234*\u201d.*\n\n`^[A-Z]{3}[0-9]{4}$`*: Will not match \u201c*ITA123*\u201d.*\n\n`^[A-Z]{3}[0-9]{4}$`*: Will not match \u201c*ITA123456*\u201d."},
        "_data_class": "_enum_data_classes_code",
        "_data_type": "_enum_data_types_string",
        "_data_container": "_enum_data_containers_scalar"
    },
    {
        "_codes_nid": "_data",
        "_codes_lid": "rules",
        "_codes_gid": "_data_rules",
        "_codes_fid": "_data_rules",
        "_codes_aid": ["rules"],
        "_docs_label": {"iso_639_3_eng": "Data rules"},
        "_docs_definition": {"iso_639_3_eng": "Data rules and restrictions."},
        "_docs_description": {"iso_639_3_eng": "This field determines which *rules* and *restrictions* are *applied* to *values* once they are *stored*."},
        "_docs_examples": {"iso_639_3_eng": "[`required`](/enum/data/rules/required): The value cannot be omitted.\n\n[`immutable`](/enum/data/rules/immutable): Once the value has been stored, it cannot be modified."},
        "_data_class": "enum_data_classes_category",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_enum",
        "_data_kind": ["_enum_data_rules"]
    },
    
    {
        "_codes_nid": "_docs",
        "_codes_lid": "label",
        "_codes_gid": "_docs_label",
        "_codes_fid": "_docs_label",
        "_codes_aid": ["label"],
        "_docs_label": {"iso_639_3_eng": "Label"},
        "_docs_definition": {"iso_639_3_eng": "Name or label"},
        "_docs_description": {"iso_639_3_eng": "A short *text* or *name* that can be used as a form *label* or table *column header*."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_dict",
        "_data_type": "_enum_data_types_string",
        "_data_kind": ["iso_639_3"],
        "_data_rules": ["_enum_data_rules_required"]
    },
    {
        "_codes_nid": "_docs",
        "_codes_lid": "definition",
        "_codes_gid": "_docs_definition",
        "_codes_fid": "_docs_definition",
        "_codes_aid": ["definition"],
        "_docs_label": {"iso_639_3_eng": "Definition"},
        "_docs_definition": {"iso_639_3_eng": "A one paragraph text that provides the definition or summary explanation."},
        "_docs_description": {"iso_639_3_eng": "The definition should explain the *what*. By reading this text one should understand what the descriptor *represents*. Details concerning methods and the environment should be covered in the [description](/docs/description)."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_dict",
        "_data_type": "_enum_data_types_string",
        "_data_format": "_enum_data_formats_markdown",
        "_data_kind": ["iso_639_3"]
    },
    {
        "_codes_nid": "_docs",
        "_codes_lid": "description",
        "_codes_gid": "_docs_description",
        "_codes_fid": "_docs_description",
        "_codes_aid": ["description"],
        "_docs_label": {"iso_639_3_eng": "Description"},
        "_docs_definition": {"iso_639_3_eng": "A long *text* or *document* explaining *how* the descriptor value is *obtained* and can be *used*."},
        "_docs_description": {"iso_639_3_eng": "The description is the area in which everything that could not be included in the [definition](/docs/definition) should be presented. This should be an occasion to explain *why* the descriptor value is *used*, with which *methods* it is obtained and all the other details that would allow a non specialised user *understand* how to fill the value."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_dict",
        "_data_type": "_enum_data_types_string",
        "_data_format": "_enum_data_formats_markdown",
        "_data_kind": ["iso_639_3"]
    },
    {
        "_codes_nid": "_docs",
        "_codes_lid": "notes",
        "_codes_gid": "_docs_notes",
        "_codes_fid": "_docs_notes",
        "_codes_aid": ["notes"],
        "_docs_label": {"iso_639_3_eng": "Notes"},
        "_docs_definition": {"iso_639_3_eng": "Notes and comments from users."},
        "_docs_description": {"iso_639_3_eng": "This field could be used to add user provided *comments* and *notes*."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_dict",
        "_data_type": "_enum_data_types_string",
        "_data_format": "_enum_data_formats_markdown",
        "_data_kind": ["iso_639_3"]
    },
    {
        "_codes_nid": "_docs",
        "_codes_lid": "examples",
        "_codes_gid": "_docs_examples",
        "_codes_fid": "_docs_examples",
        "_codes_aid": ["examples"],
        "_docs_label": {"iso_639_3_eng": "Examples"},
        "_docs_definition": {"iso_639_3_eng": "Usage examples."},
        "_docs_description": {"iso_639_3_eng": "This field should be used to provide *samples* of the descriptor's *data* to enable a user to understand *how* to *fill* the *information correctly*."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_dict",
        "_data_type": "_enum_data_types_string",
        "_data_format": "_enum_data_formats_markdown",
        "_data_kind": ["iso_639_3"]
    },
    
    {
        "_codes_nid": "_rels",
        "_codes_lid": "predicate",
        "_codes_gid": "_rels_predicate",
        "_codes_fid": "_rels_predicate",
        "_codes_aid": ["predicate"],
        "_docs_label": {"iso_639_3_eng": "Relationship predicate"},
        "_docs_definition": {"iso_639_3_eng": "Type or classification of the relationship."},
        "_docs_description": {"iso_639_3_eng": "A relationship predicate indicates the *type*, *nature* or *class* of the relationship. You may have several edges connecting the same nodes, but each edge must have a *different* predicate. This field should contain the [global identifier](/codes/gid) of a term belonging to the data dictionary enumerations [controlled vocabulary](/enum/predicates)."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_scalar",
        "_data_type": "_enum_data_types_enum",
        "_data_kind": ["_enum_predicates"],
        "_data_rules": [
            "_enum_data_rules_required",
            "_enum_data_rules_immutable"
        ]
    },
    {
        "_codes_nid": "_rels",
        "_codes_lid": "path",
        "_codes_gid": "_rels_path",
        "_codes_fid": "_rels_path",
        "_codes_aid": ["path"],
        "_docs_label": {"iso_639_3_eng": "Relationship paths"},
        "_docs_definition": {"iso_639_3_eng": "List of path roots that share the edge."},
        "_docs_description": {"iso_639_3_eng": "This field is an *array* of [global identifiers](/codes/gid) representing the *list* of *paths* sharing the edge: these global identifiers represent the root node of the paths. The field is used to allow more than one path to share the same edge in a *graph*."},
        "_data_class": "_enum_data_classes_code",
        "_data_container": "_enum_data_containers_list",
        "_data_type": "_enum_data_types_term",
        "_data_rules": ["_enum_data_rules_required"]
    }
]