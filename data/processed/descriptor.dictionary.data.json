[{"_key":"_scalar","_code":{"_nid":"","_lid":"scalar","_gid":"_scalar","_aid":["scalar"]},"_info":{"_title":{"iso_639_3_eng":"Scalar"},"_definition":{"iso_639_3_eng":"This property describes a container for a single value of any type."},"_description":{"iso_639_3_eng":"This property defines the *shape* and *type* of *scalar data values*. A *number* or a *text* are examples of a scalar values; an *array* of *elements* or a key/value *dictionary* would *not* be considered a scalar value."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_scalar\": {\n\t\t\"_class\": \"_class_quantity\",\n\t\t\"_type\": \"_type_integer\",\n\t\t\"_valid-range\": {\n\t\t\t\"_min-range-inclusive\": 5,\n\t\t\t\"_max-range-inclusive\": 10\n\t\t}\n\t}\n}\n```\nThis example describes a [quantitative](__class_quantity.md) *scalar* discrete [integer](_type_integer.md) value in the *range* from `5` to `10` inclusive.\n\n\n\n\n```json\n{\n\t\"_scalar\": {\n\t\t\"_class\": \"_class_quantity\",\n\t\t\"_type\": \"_type_number\",\n\t\t\"_valid-range\": {\n\t\t\t\"_min-range-inclusive\": 0.0,\n\t\t\t\"_max-range-exclusive\": 100.0\n\t\t},\n\t\t\"_unit\": \"_unit_length_cm\"\n\t}\n}\n```\nThis example describes a [continuous](_type_number.md) [quantitative](_class_quantity.md) value *greater or equal* to `0.0` and *less than* `100.0` representing a length in [centimetres](_unit_length_cm.md).\n\n\n\n\n```json\n{\n\t\"_scalar\": {\n\t\t\"_class\": \"_class_category\",\n\t\t\"_type\": \"_type_string_enum\",\n\t\t\"_kind\": [\"iso_639_3\"]\n\t}\n}\n```\nThis example describes a [categorical](_class_category.md) [enumeration](_type_string_enum.md) that must be chosen from the [controlled vocabulary](iso_639_3.md) of ISO 639 *language codes*.\n\n\n\n\n```json\n{\n\t\"_scalar\": {\n\t\t\"_type\": \"_type_string\",\n\t\t\"_format\": \"_format_markdown\"\n\t}\n}\n```\nThis example describes a [text](_type_string.md) value *encoded* in [Markdown](_format_markdown.md) format.\n\n\n\n\n```json\n{\n\t\"_scalar\": {}\n}\n```\nThis example shows the *data definition* for a *descriptor* that can hold *scalar* values of *any type*, this means that the container *does not accept* [arrays](_array.md), [sets](_set.md) or [dictionaries](_dict.md)."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_scalar"]}},"_rule":{"_recommended":{"_selection-descriptors_any":["_type","_kind","_format","_unit","_unit-name","_unit-symbol","_regexp","_decimals","_range","_range_string","_range_date","_valid-range","_valid-range_string","_valid-range_date","_normal-range","_normal-range_string","_normal-range_date"]},"_banned":["_scalar","_array","_set","_dict"]}},{"_key":"_array","_code":{"_nid":"","_lid":"array","_gid":"_array","_aid":["array"]},"_info":{"_title":{"iso_639_3_eng":"Array"},"_definition":{"iso_639_3_eng":"This property describes a container for an array of elements of the same data type."},"_description":{"iso_639_3_eng":"This property defines the *shape* and *type* of an *array* of *items*. An array is a *list* of *values* of the *same type*, values can be *repeated* and the *type definitions* refer to the *list elements*.\n\nThe property can contain *one* of the following elements:\n\n- [Scalar elements](_scalar.md): The array elements must be *scalar values*.\n- [Array elements](_array.md): The array contains a list of *arrays*.\n- [Set elements](_set.md): The array contains a list of *sets*.\n- [Key/value dictionary elements](_dict.md): The array contains a list of *key/value dictionaries*.\n\nThe property may also be *empty*, in which case the array *elements* can be of any *shape* or *type*."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_array\": {\n\t\t\"_scalar\": {\n\t\t\t\"_class\": \"_class_quantity\",\n\t\t\t\"_type\": \"_type_integer\",\n\t\t\t\"_valid-range\": {\n\t\t\t\t\"_min-range-inclusive\": 5,\n\t\t\t\t\"_max-range-inclusive\": 10\n\t\t\t}\n\t\t}\n\t}\n}\n```\nThis example describes an *array* of [scalar](_scalar.md) [integer](_type_integer.md) values in the *range* from `5` to `10` inclusive, the *list element* values are [quantitatve](_class_quantity.md).\n\n\n\n```json\n{\n\t\"_array\": {\n\t\t\"_array\": {\n\t\t\t\"_scalar\": {\n\t\t\t\t\"_class\": \"_class_quantity\",\n\t\t\t\t\"_type\": \"_type_number\",\n\t\t\t\t\"_valid-range\": {\n\t\t\t\t\t\"_min-range-inclusive\": 0.0,\n\t\t\t\t\t\"_max-range-exclusive\": 100.0\n\t\t\t\t},\n\t\t\t\t\"_unit\": \"_unit_length_cm\"\n\t\t\t}\n\t\t}\n\t}\n}\n```\nThis example describes a *list* of *arrays* of [numbers](_type_number.md) whose value is *greater than or equal* to `0.0` and *less than* `100.0` representing *lengths* in [centimetres](_unit_length_cm.md), the *elements* of the *inner list* are [quantitatve](_class_quantity.md).\n\n\n\n```json\n{\n\t\"_array\": {\n\t\t\"_set\": {\n\t\t\t\"_scalar\": {\n\t\t\t\t\"_class\": \"_class_category\",\n\t\t\t\t\"_type\": \"_type_string_enum\",\n\t\t\t\t\"_kind\": [\"iso_639_3\"]\n\t\t\t}\n\t\t}\n\t}\n}\n```\nThis example describes an *array* of [sets](_set.md) whose *elements* belong to the [enumeration](_type_string_enum.md) of ISO 639 [language codes](iso_639_3.md), the *elements* of the *inner set* are [categorical](_class_category.md).\n\n\n\n```json\n{\n\t\"_array\": {\n\t\t\"_dict\": {\n\t\t\t\"_dict_key\": {\n\t\t\t\t\"_class\": \"_class_category\",\n\t\t\t\t\"_type_key\": \"_type_string_enum\",\n\t\t\t\t\"_kind\": [\"iso_3166_1\"]\n\t\t\t},\n\t\t\t\"_dict_value\": {\n\t\t\t\t\"_scalar\": {\n\t\t\t\t\t\"_type\": \"_type_object\",\n\t\t\t\t\t\"_kind\": [\"my_struct_definition\"]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\nThis example describes an *array* of [key/value dictionary](_dict.md) *items*. The [dictionary keys](_dict_key.md) are [categorical](_class_category.md) and must be selected among the elements of the [ISO country codes](iso_3166_1.md) [controlled vocabulary](_type_string_enum.md). The dictionary values are [objects](_type_object.md) of the `my_struct_definition` class.\n\n\n\n```json\n{\n\t\"_array\": {}\n}\n```\nThis example describes an *array* that can have *elements* of *any shape* or *type*."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_array"]}},"_rule":{"_required":{"_selection-descriptors_one-none":["_scalar","_array","_set","_dict"]},"_recommended":{"_selection-descriptors_any":["_elements","_array_prefix"]}}},{"_key":"_set","_code":{"_nid":"","_lid":"set","_gid":"_set","_aid":["set"]},"_info":{"_title":{"iso_639_3_eng":"Set"},"_definition":{"iso_639_3_eng":"This property describes a container for an array of unique elements of the same data type."},"_description":{"iso_639_3_eng":"This property defines the *shape* and *type* of a *set* of *items*. A *set* is a *list* of *values* of the *same type*, values must be *unique* and the *type definitions* refer to the *list elements*.\n\nThe property *must* contain the [scalar](_set_scalar.md) container which defines the [data type](_set_type.md) of the set *elements*, which includes [booleans](_type_boolean.md), [integers](_type_integer.md), [floats](_type_number.md) and [strings](_type_string.md)."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_set\": {\n\t\t\"_set_scalar\": {\n\t\t\t\"_set_type\": \"_type_boolean\"\n\t\t}\n\t}\n}\n```\nThis example describes a *set* of [booleans](_type_boolean.md); such a *set* can *only* contain *one* element, `true` or `false`.\n\n\n\n\n```json\n{\n\t\"_set\": {\n\t\t\"_set_scalar\": {\n\t\t\t\"_class\": \"_class_quantity\",\n\t\t\t\"_set_type\": \"_type_integer\"\n\t\t}\n\t}\n}\n```\nThis example describes a *set* of [discrete](_type_integer.md) [quantitative](_class_quantity.md) values.\n\n\n\n\n```json\n{\n\t\"_set\": {\n\t\t\"_set_scalar\": {\n\t\t\t\"_class\": \"_class_quantity\",\n\t\t\t\"_set_type\": \"_type_number\",\n\t\t\t\"_valid-range\": {\n\t\t\t\t\"_min-range-inclusive\": 0.0,\n\t\t\t\t\"_max-range-exclusive\": 100.0\n\t\t\t},\n\t\t\t\"_unit\": \"_unit_length_cm\"\n\t\t}\n\t}\n}\n```\nThis example describes a *set* of [continuous](_type_number.md) [quantitative](_class_quantity.md) values *greater or equal* to `0.0` and *less than* `100.0` representing [centimetres](_unit_length_cm.md).\n\n\n\n\n```json\n{\n\t\"_set\": {\n\t\t\"_set_scalar\": {\n\t\t\t\"_class\": \"_class_category\",\n\t\t\t\"_set_type\": \"_type_string_enum\",\n\t\t\t\"_kind\": [\"iso_639_3\"]\n\t\t}\n\t}\n}\n```\nThis example describes a set of [categorical](_class_category.md) [enumerations](_type_string_enum.md) that must be chosen from the [controlled vocabulary](iso_639_3.md) of ISO 639 *language codes*."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_set"]}},"_rule":{"_required":{"_selection-descriptors_one-none":["_set_scalar"]},"_recommended":{"_selection-descriptors_any":["_elements","_array_prefix"]},"_banned":["_scalar","_array","_set","_dict"]}},{"_key":"_dict","_code":{"_nid":"","_lid":"dict","_gid":"_dict","_aid":["dict"]},"_info":{"_title":{"iso_639_3_eng":"Dictionary"},"_definition":{"iso_639_3_eng":"This property describes a key/value data dictionary, in which a string key is used to access a value."},"_description":{"iso_639_3_eng":"This property defines the *shape* and *type* of a *key/value dictionary*. *Keys* are *strings* that *may* be *bound* to a *controlled vocabulary*, while *values* may be of *any type*. Once defined the *value type*, this must apply to *all values* in the *dictionary*."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_dict_key\": {\n\t\t\"_class\": \"_class_category\",\n\t\t\"_type\": \"_type_string_enum\",\n\t\t\"_kind\": \"iso_639_3\"\n\t},\n\t\"_dict_value\": {\n\t\t\"_array\": {\n\t\t\t\"_class\": \"_class_other\",\n\t\t\t\"_type\": \"_type_object\",\n\t\t\t\"_kind\": \"some_object_definition\",\n\t\t\t\"_min-items\": 5,\n\t\t\t\"_max-items\": 10\n\t\t}\n\t}\n}\n```\n\nThis example describes a *dictionary* whose *keys* are the *global identifiers* of the ISO 639 languages *controlled vocabulary elements*, and the values are *arrays* of *objects* that correspond to the `some_object_definition` *data structure type*; these *array* values must have a *minimum* of `5` elements and a *maximum* of `10` elements.\n\n```json\n{\n\t\"_dict_key\": {\n\t\t\"_class\": \"_class_other\",\n\t\t\"_type\": \"_type_string\"\n\t},\n\t\"_dict_value\": {\n\t\t\"_scalar\": {\n\t\t\t\"_class\": \"_class_other\",\n\t\t\t\"_type\": \"_type_string\",\n\t\t\t\"_format\": \"_format_markdown\"\n\t\t}\n\t}\n}\n```\n\nThis example describes a *dictionary* whose *keys* are *plain strings* and *values* are *text* in *Markdown* format. It implements a multilingual styled text\n\n```json\n{\n\t\"_dict_key\": {\n\t\t\"_class\": \"_class_category\",\n\t\t\"_type\": \"_type_string_enum\",\n\t\t\"_kind\": \"iso_3166_1\"\n\t},\n\t\"_dict_value\": {\n\t\t\"_dict\": {\n\t\t\t\"_dict_key\": {\n\t\t\t\t\"_class\": \"_class_category\",\n\t\t\t\t\"_type\": \"_type_string_enum\",\n\t\t\t\t\"_kind\": \"iso_639_3\"\n\t\t\t},\n\t\t\t\"_dict_value\": {\n\t\t\t\t\"_array\": {\n\t\t\t\t\t\"_class\": \"_class_other\",\n\t\t\t\t\t\"_type\": \"_type_object\",\n\t\t\t\t\t\"_kind\": \"some_object_definition\",\n\t\t\t\t\t\"_min-items\": 5,\n\t\t\t\t\t\"_max-items\": 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\nThis example describes a *dictionary* whose *keys* are the *global identifiers* of the ISO 3166 country *controlled vocabulary elements*, and the values are *another dictionary* whose keys are ISO 639 languages and whose *values* are *arrays* that correspond to the `some_object_definition` *data structure type*; these *array* values must have a *minimum* of `5` elements and a *maximum* of `10` elements. This is an example of a recursive dictionary definition.\n\n```json\n{\n\t\"_dict_key\": {},\n\t\"_dict_value\": {}\n}\n```\n\nThis example describes a dictionary whose *keys* can be *any string* and whose *values* can be *any container* with *any value*."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_dict"]}},"_rule":{"_required":{"_selection-descriptors_all":["_dict_key","_dict_value"]},"_banned":["_scalar","_array","_set","_dict"]}},{"_key":"_set_scalar","_code":{"_nid":"_set","_lid":"scalar","_gid":"_set_scalar","_aid":["scalar"]},"_info":{"_title":{"iso_639_3_eng":"Set scalar data container"},"_definition":{"iso_639_3_eng":"This property describes the container for the elements of a set."},"_description":{"iso_639_3_eng":"This property defines the [data type](_set_type.md) of the *elements* of a [set](_set.md). Since a set is a *list* of *unique elements*, these elements must be *comparable* in order to prevent duplicate items. Set elements can be [booleans](_type_boolean.md), [integers](_type_integer.md), [floats](_type_number.md) and [strings](_type_string.md)."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_set_scalar\": {\n\t\t\"_set_type\": \"_type_boolean\"\n\t}\n}\n```\nThe *elements* of the [set](_set.md) can either be, `true` or `false`.\n\n\n\n\n```json\n{\n\t\"_set_scalar\": {\n\t\t\"_class\": \"_class_quantity\",\n\t\t\"_set_type\": \"_type_integer\"\n\t}\n}\n```\nThe *elements* of the [set](_set.md) are [quantitative](_class_quantity.md) values of [type](_set_type.md) [integer](_type_integer.md).\n\n\n\n\n```json\n{\n\t\"_set_scalar\": {\n\t\t\"_class\": \"_class_quantity\",\n\t\t\"_set_type\": \"_type_number\",\n\t\t\"_valid-range\": {\n\t\t\t\"_min-range-inclusive\": 0.0,\n\t\t\t\"_max-range-exclusive\": 100.0\n\t\t},\n\t\t\"_unit\": \"_unit_length_cm\"\n\t}\n}\n```\nThe *elements* of the [set](_set.md) are [continuous](_type_number.md) [quantitative](_class_quantity.md) values *greater or equal* to `0.0` and *less than* `100.0` representing [centimetres](_unit_length_cm.md).\n\n\n\n\n```json\n{\n\t\"_set_scalar\": {\n\t\t\"_class\": \"_class_category\",\n\t\t\"_set_type\": \"_type_string_enum\",\n\t\t\"_kind\": [\"iso_639_3\"]\n\t}\n}\n```\nThe *elements* of the [set](_set.md) are [categorical](_class_category.md) [enumerations](_type_string_enum.md) that must be chosen from the ISO 639 [language codes](iso_639_3.md)."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_set_scalar"]}},"_rule":{"_required":{"_selection-descriptors_all":["_set_type"]},"_recommended":{"_selection-descriptors_any":["_kind","_format","_unit","_unit-name","_regexp","_range","_range_string","_range_date","_valid-range","_valid-range_string","_valid-range_date","_normal-range","_normal-range_string","_normal-range_date"]},"_banned":["_type","_scalar","_array","_set","_dict"]}},{"_key":"_dict_key","_code":{"_nid":"_dict","_lid":"key","_gid":"_dict_key","_aid":["key"]},"_info":{"_title":{"iso_639_3_eng":"Dictionary key data container"},"_definition":{"iso_639_3_eng":"This property describes the data type of dictionary keys, which must be strings."},"_description":{"iso_639_3_eng":"This property is an *object structure* that contains the *data definition* for a *dictionary key*. Dictionary keys can be [strings](_type_string.md) or [enumerations](_type_string_enum.md).\n\nYou *cannot omit* this *property*, but you can *set* it to an *empty object*, in that case it is assumed the dictionary *key* can be any [string](_type_string.md)."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_dict_key\": {\n\t\t\"_class\": \"_class_category\",\n\t\t\"_type_key\": \"_type_string_enum\",\n\t\t\"_kind\": [\"iso_639_3\"]\n\t}\n}\n```\nThis example describes a [dictionary](_dict.md) whose [categorical](_class_category.md) *keys* are the [global identifiers](_gid.md) of the ISO 639 languages [controlled vocabulary elements](iso_639_3.md).\n\n\n\n```json\n{\n\t\"_dict_key\": {\n\t\t\"_type_key\": \"_type_string\"\n\t}\n}\n```\nThis example describes a [dictionary](_dict.md) whose *keys* are plain [strings](_type_string.md).\n\n\n\n```json\n{\n\t\"_dict_key\": {\n\t\t\"_class\": \"_class_category\",\n\t\t\"_type_key\": \"_type_string_enum\",\n\t\t\"_kind\": \"iso_3166_1\"\n\t}\n}\n```\nThis example describes a [dictionary](_dict.md) whose [categorical](_class_category.md) *keys* are the [global identifiers](_gid.md) of the ISO 3166 country [controlled vocabulary elements](iso_3166_1.md).\n\n\n\n```json\n{\n\t\"_dict_key\": {},\n}\n```\nThis example describes a [dictionary](_dict.md) whose *keys* can be any [string](_type_string.md)."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_dict_key"]}},"_rule":{"_required":{"_selection-descriptors_one-none":["_type_key"]},"_recommended":{"_selection-descriptors_any":["_kind","_format","_unit","_unit-name","_regexp"]},"_banned":["_type"]}},{"_key":"_dict_value","_code":{"_nid":"_dict","_lid":"value","_gid":"_dict_value","_aid":["value"]},"_info":{"_title":{"iso_639_3_eng":"Dictionary value data definition"},"_definition":{"iso_639_3_eng":"This property describes the data type of dictionary key values."},"_description":{"iso_639_3_eng":"This *object* defines the *type* of the *value* in a [dictionary](_dict.md), dictionary values can be of *any type*.\n\nThe *property* is *required*, but you can set it to an *empty object*: in that case it means that the dictionary can have *values* of *any shape* or *type*."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_dict_value\": {\n\t\t\"_array\": {\n\t\t\t\"_scalar\": {\n\t\t\t\t\"_type\": \"_type_object\",\n\t\t\t\t\"_kind\": \"some_object_definition\",\n\t\t\t\t\"_elements\": {\n\t\t\t\t\t\"_min-items\": 5,\n\t\t\t\t\t\"_max-items\": 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\nThis example describes a [dictionary](_dict.md) whose *values* are [arrays](_array.md) of [objects](_type_object.md) that correspond to the `some_object_definition` *data structure type*; these *array* values must have a [minimum](_min-items.md) of `5` [elements](_elements.md) and a [maximum](_max-items.md) of `10` [elements](_elements.md).\n\n\n\n```json\n{\n\t\"_dict_value\": {\n\t\t\"_scalar\": {\n\t\t\t\"_type\": \"_type_string\",\n\t\t\t\"_format\": \"_format_markdown\"\n\t\t}\n\t}\n}\n```\nThis example describes a [dictionary](_dict.md) whose *values* are [text](_type_string.md) in [Markdown](_format_markdown.md) [format](_format.md).\n\n\n\n```json\n{\n\t\"_dict_value\": {\n\t\t\"_dict\": {\n\t\t\t\"_dict_key\": {\n\t\t\t\t\"_class\": \"_class_category\",\n\t\t\t\t\"_type_key\": \"_type_string_enum\",\n\t\t\t\t\"_kind\": \"iso_639_3\"\n\t\t\t},\n\t\t\t\"_dict_value\": {\n\t\t\t\t\"_array\": {\n\t\t\t\t\t\"_scalar\": {\n\t\t\t\t\t\t\"_class\": \"_class_other\",\n\t\t\t\t\t\t\"_type\": \"_type_object\",\n\t\t\t\t\t\t\"_kind\": \"some_object_definition\",\n\t\t\t\t\t\t\"_elements\": {\n\t\t\t\t\t\t\t\"_min-items\": 5,\n\t\t\t\t\t\t\t\"_max-items\": 10\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```\nThis example describes a [dictionary](_dict.md) whose *values* are another [dictionary](_dict.md) whose [keys](_dict_key.md) are [ISO 639 languages](iso_639_3.md) and whose *values* are [arrays](_array.md) of [items](_scalar.md) that correspond to the `some_object_definition` [data structure type](_kind.md); these arrays must have a [minimum](_min-items.md) of `5` [elements](_elements.md) and a [maximum](_max-items.md) of `10` [elements](_elements.md). This is an example of a recursive dictionary definition.\n\n\n\n```json\n{\n\t\"_dict_value\": {}\n}\n```\nThis example describes a dictionary whose *values* can be *any container* with *any value*."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_data"]}}},{"_key":"_class","_code":{"_nid":"","_lid":"class","_gid":"_class","_aid":["class"]},"_info":{"_title":{"iso_639_3_eng":"Data classification"},"_definition":{"iso_639_3_eng":"This enumerated value indicates to which class or category the descriptor's value belongs."},"_description":{"iso_639_3_eng":"The class can be selected from the following choices:\n\n- [Category](_class_category.md): The value is *categorical*.\n- [Reference](_class_reference.md): The value is a *reference* to another item.\n- [Identifier](_class_identifier.md): The value is an *identifier*.\n- [Quantity](_class_quantity.md): The value represents an *observed quantity*.\n- [Calculated quantity](_class_quantity_calculated.md): The value represents a quantity *calculated* from a *set of observations*.\n- [Averaged quantity](_class_quantity_averaged.md): The value represents a quantity *averaging* a *range* of *observations*.\n- [Time](_class_time.md): The value represents a point in a time series.\n\nThe property can be used to *group descriptors* according to the *function* of the *value*.\n\n*This classification applies to [scalar](_scalar.md) values*."}},"_data":{"_class":"_class_category","_scalar":{"_type":"_type_string_enum","_kind":["_class"]}}},{"_key":"_classes","_code":{"_nid":"","_lid":"classes","_gid":"_classes","_aid":["classes"]},"_info":{"_title":{"iso_639_3_eng":"Data classifications"},"_definition":{"iso_639_3_eng":"This list of enumerated values indicate to which classes or categories a collection of descriptor values belong."},"_description":{"iso_639_3_eng":"See the [data classification](_domain.md) descriptor for information on the list values."}},"_data":{"_class":"_class_category","_set":{"_set_scalar":{"_set_type":"_type_string_enum","_kind":["_class"]}}}},{"_key":"_subject","_code":{"_nid":"","_lid":"subject","_gid":"_subject","_aid":["subject"]},"_info":{"_title":{"iso_639_3_eng":"Trait subject"},"_definition":{"iso_639_3_eng":"Subject to which the trait refers to."},"_description":{"iso_639_3_eng":"The category should indicate to which *subject* the *trait* applies to and not to what the *measurement refers* to. For instance in *plant height*, the subject is the *plant*, although the *value* of the *trait* may refer to a *population*."}},"_data":{"_class":"_class_category","_scalar":{"_type":"_type_string_enum","_kind":["chr_subject"]}}},{"_key":"_subjects","_code":{"_nid":"","_lid":"subjects","_gid":"_subjects","_aid":["subjects"]},"_info":{"_title":{"iso_639_3_eng":"Trait subjects"},"_definition":{"iso_639_3_eng":"Subjects to which a collection of traits refer to."},"_description":{"iso_639_3_eng":"See the [Trait subject](_subject.md) descriptor for information on the list values."}},"_data":{"_class":"_class_category","_set":{"_set_scalar":{"_set_type":"_type_string_enum","_kind":["chr_subject"]}}}},{"_key":"_domain","_code":{"_nid":"","_lid":"domain","_gid":"_domain","_aid":["domain"]},"_info":{"_title":{"iso_639_3_eng":"Domains"},"_definition":{"iso_639_3_eng":"Domains to which the term refers to."},"_description":{"iso_639_3_eng":"This category should be used to indicate to which *domains* the value or *trait* refers to. The category should list the *domains* to which the *term* or *descriptor* belongs."}},"_data":{"_class":"_class_category","_set":{"_set_scalar":{"_set_type":"_type_string_enum","_kind":["chr_domain"]}}}},{"_key":"_tag","_code":{"_nid":"","_lid":"tag","_gid":"_tag","_aid":["tag"]},"_info":{"_title":{"iso_639_3_eng":"Tags"},"_definition":{"iso_639_3_eng":"Tags to which the term refers to."},"_description":{"iso_639_3_eng":"This category should be used to attach tags to a term."}},"_data":{"_class":"_class_category","_set":{"_set_scalar":{"_set_type":"_type_string_enum","_kind":["chr_tag"]}}}},{"_key":"_type","_code":{"_nid":"","_lid":"type","_gid":"_type","_aid":["type"]},"_info":{"_title":{"iso_639_3_eng":"Data type"},"_definition":{"iso_639_3_eng":"The data type of the descriptor's value."},"_description":{"iso_639_3_eng":"The *data type* defines the *type* that the *value* or *values* held by the *descriptor* should have. This type applies to the [scalar](_scalar.md) dimension of the *value*, this means that, in the case of an [array](_array.md) or [set](_set.md), the type *applies* to the list *elements*.\n\nThese are the possible values:\n\n- [Boolean](_type_boolean.md): *True* or *false* value. No other [data section](_data.md) properties are expected.\n- [Integer](_type_integer.md): *Numeric discrete* value. The [data section](_data.md) can include the following properties: [unit](_unit.md), [unit name](_unit-name.md), [range](_range.md), [valid range](_valid-range.md) and [normal range](_normal-range.md).\n- [Numeric](_type_number.md): *Numeric discrete* or *continuous* value; will be considered a *floating point number*. The [data section](_data.md) can include the following properties: [unit](_unit.md), [unit name](_unit-name.md), [range](_range.md), [valid range](_valid-range.md) and [normal range](_normal-range.md).\n- [Time-stamp](_type_number_timestamp.md): A [numeric](_type_number.md) Unix Timestamp, it is used to indicate a *precise moment in time*. The [data section](_data.md) can include the following properties: [range](_range.md), [valid range](_valid-range.md) and [normal range](_normal-range.md).\n- [String](_type_string.md): A *character* or *text* encoded in UTF-8. The [data section](_data.md) can include the following properties: [format](_format.md), [unit](_unit.md), [unit name](_unit-name.md) and [regular expression](_regexp.md).\n- [Key reference](_type_string_key.md): A [string](_type_string.md) representing the [global identifier](_gid.md) of a *document* from the *terms collection*. The [data section](_data.md) is *required* to include the [data kind](_kind.md) field which specifies the *kind of term*, these are the allowed choices:\n    - [Any term](_any-term.md): The value can reference *any term* in the *terms collection*.\n    - [Any enumeration](_any-enum.md): The value can reference *any term* *belonging* to a *controlled vocabulary*, this means that the *term* must be *referenced* in at least one *edge* with the [enumeration](_predicate_enum-of.md) [predicate](_predicate.md).\n    - [Any structure](_any-object.md): The value can reference *any term* that *defines* an *object data structure*: such terms must have the [rules section](_rule.md) property.\n    - [Any descriptor](_any-descriptor.md): The value can reference *any term* that *defines* a *descriptor*: such terms must have the [data section](_data.md) property.\n- [Document handle](_type_string_handle.md): A [string](_type_string.md) representing the [document handle](_id.md) of a *record* belonging to *any collection*. No other [data section](_data.md) properties are expected.\n- [Enumeration](_type_string_enum.md): A [string](_type_string.md) representing the [global identifier](_gid.md) of a *document* belonging to the *terms collection* that is part of a *controlled vocabulary*. The [data section](_data.md) can include the following properties: [format](_format.md), [unit](_unit.md), [unit name](_unit-name.md) and [regular expression](_regexp.md). In addition, the [data section](_data.md) *requires* the [data kind](_kind.md) field, that is *must* *specify* from which *controlled vocabulary* the value must be *chosen*.\n- [Object](_type_object.md): An *object data structure*. The [data section](_data.md) is required to contain the [data kind](_kind.md) field, and these are the allowed choices:\n    - *A [global identifier](_gid.md)*: It must be one or more [key references](_type_string_key.md) to *terms* that define a *data structure type*, the term *must include* the [rules section](_rule.md). This means that the value *must* be an *object* of *that type*.\n    - [Any structure](_any-object.md): The value can be an *object* of *any type*, but its *properties* will be *parsed* and *validated*. This means that only the *constraints* at the *object level* will be *ignored*.\n- [GeoJSON geometry](_type_object_geojson.md): An *object data structure* representing a *geographic structure* encoded in the [GeoJSON](https://geojson.org) data format. No other [data section](_data.md) properties are expected.\n\nIf *this property* is *omitted*, it means that the *value* can be of *any scalar type*."}},"_data":{"_class":"_class_category","_scalar":{"_type":"_type_string_enum","_kind":["_type"]}}},{"_key":"_usage","_code":{"_nid":"","_lid":"usage","_gid":"_usage","_aid":["usage"]},"_info":{"_title":{"iso_639_3_eng":"Usage"},"_definition":{"iso_639_3_eng":"The usage classes of the term."},"_description":{"iso_639_3_eng":"This value identifies the different *classes* and *functions* the current *term* can *represent*.\n\nFor instance, a descriptor can be an *indicator* when used in a specific context, or it can represent *metadata* in another context. This field contains *all usages* the current term can take in *all contexts*."}},"_data":{"_class":"_class_category","_set":{"_set_scalar":{"_set_type":"_type_string_enum","_kind":["_usage"]}}}},{"_key":"_options","_code":{"_nid":"","_lid":"options","_gid":"_options","_aid":["options"]},"_info":{"_title":{"iso_639_3_eng":"Options"},"_definition":{"iso_639_3_eng":"The options available for the term."},"_description":{"iso_639_3_eng":"This value identifies the different *options* available to the term."}},"_data":{"_class":"_class_category","_set":{"_set_scalar":{"_set_type":"_type_string_enum","_kind":["_options"]}}}},{"_key":"_set_type","_code":{"_nid":"_set","_lid":"type","_gid":"_set_type","_aid":["type"]},"_info":{"_title":{"iso_639_3_eng":"Set elements data type"},"_definition":{"iso_639_3_eng":"The data type of the elements of a set."},"_description":{"iso_639_3_eng":"This property is used to define the *data type* of [set](_set.md) *elements*, these are the allowed values:\n\n- [Boolean](_type_boolean.md): *True* or *false* value.\n- [Integer](_type_integer.md): *Numeric discrete* value. The [data section](_set_scalar.md) can include the following properties: [unit](_unit.md), [unit name](_unit-name.md), [range](_range.md), [valid range](_valid-range.md) and [normal range](_normal-range.md).\n- [Numeric](_type_number.md): *Numeric discrete* or *continuous* value; will be considered a *floating point number*. The [data section](_set_scalar.md) can include the following properties: [unit](_unit.md), [unit name](_unit-name.md), [range](_range.md), [valid range](_valid-range.md) and [normal range](_normal-range.md).\n- [Time-stamp](_type_number_timestamp.md): A [numeric](_type_number.md) Unix Timestamp, it is used to indicate a *precise moment in time*. The [data section](_set_scalar.md) can include the following properties: [range](_range.md), [valid range](_valid-range.md) and [normal range](_normal-range.md).\n- [String](_type_string.md): A *character* or *text* encoded in UTF-8. The [data section](_set_scalar.md) can include the following properties: [format](_format.md), [unit](_unit.md), [unit name](_unit-name.md) and [regular expression](_regexp.md).\n- [Key reference](_type_string_key.md): A [string](_type_string.md) representing the [global identifier](_gid.md) of a *document* from the *terms collection*. The [data section](_set_scalar.md) is *required* to include the [data kind](_kind.md) field which specifies the *kind of term*, these are the allowed choices:\n    - [Any term](_any-term.md): The value can reference *any term* in the *terms collection*.\n    - [Any enumeration](_any-enum.md): The value can reference *any term* *belonging* to a *controlled vocabulary*, this means that the *term* must be *referenced* in at least one *edge* with the [enumeration](_predicate_enum-of.md) [predicate](_predicate.md).\n    - [Any structure](_any-object.md): The value can reference *any term* that *defines* an *object data structure*: such terms must have the [rules section](_rule.md) property.\n    - [Any descriptor](_any-descriptor.md): The value can reference *any term* that *defines* a *descriptor*: such terms must have the [data section](_data) property.\n- [Document handle](_type_string_handle.md): A [string](_type_string.md) representing the [document handle](_id.md) of a *record* belonging to *any collection*. No other [data section](_set_scalar.md) properties are expected.\n- [Enumeration](_type_string_enum.md): A [string](_type_string.md) representing the [global identifier](_gid.md) of a *document* belonging to the *terms collection* that is part of a *controlled vocabulary*. The [data section](_set_scalar.md) can include the following properties: [format](_format.md), [unit](_unit.md), [unit name](_unit-name.md) and [regular expression](_regexp.md). In addition, the [data section](_set_scalar.md) *requires* the [data kind](_kind.md) field, that is *must* *specify* from which *controlled vocabulary* the value must be *chosen*.\n\nThe [set](_set.md) container *requires* this property."}},"_data":{"_class":"_class_category","_scalar":{"_type":"_type_string_enum","_kind":["_set_type"]}}},{"_key":"_type_key","_code":{"_nid":"_type","_lid":"key","_gid":"_type_key","_aid":["key"]},"_info":{"_title":{"iso_639_3_eng":"Key data type"},"_definition":{"iso_639_3_eng":"The data type of a key."},"_description":{"iso_639_3_eng":"This field defines the data type of a *dictionary key*, it is an [enumerated](_type_string_enum.md) choice that can take the following values:\n\n- [String](_type_string.md): A *character* or *text* encoded in UTF-8. The [data section](_data.md) can include the [regular expression](_regexp.md) property.\n- [Key reference](_type_string_key.md): A [string](_type_string.md) representing the [global identifier](_gid.md) of a *term*. The [data section](_data.md) is *required* to include the [data kind](_kind.md) field which specifies the *kind of term*, these are the allowed choices:\n    - [Any term](_any-term.md): The value can reference *any document* in the *terms collection*.\n    - [Any enumeration](_any-enum.md): The value can reference *any term* *belonging* to a *controlled vocabulary*, this means that the *term* must be *referenced* in at least one *edge* with the [enumeration](_predicate_enum-of.md) [predicate](_predicate.md).\n    - [Any structure](_any-object.md): The value can reference *any term* that *defines* an *object data structure*: such terms must include the [rules section](_rule.md) property.\n    - [Any descriptor](_any-descriptor.md): The value can reference *any term* that *defines* a *descriptor*: such terms must have the [data section](_data.md) property.\n- [Enumeration](_type_string_enum.md): A [string](_type_string.md) representing the [global identifier](_gid.md) of a *document* belonging to the *terms collection* that is a member of a *controlled vocabulary*. The [data section](_data.md) can include the following properties: [format](_format.md), [unit](_unit.md), [unit name](_unit-name.md) and [regular expression](_regex-mdp). In addition, the [data section](_data.md) *requires* the [data kind](_kind.md) field, that is *must* *specify* from which *controlled vocabulary* the value must be *chosen*.\n\nWhen validating dictionary types, the *key* and *value* parts are *parsed* and *validated independently*, dictionary keys are not considered descriptors."}},"_data":{"_class":"_class_category","_scalar":{"_type":"_type_string_enum","_kind":["_type_key"]}}},{"_key":"_kind","_code":{"_nid":"","_lid":"kind","_gid":"_kind","_aid":["kind"]},"_info":{"_title":{"iso_639_3_eng":"Data type references"},"_definition":{"iso_639_3_eng":"This property is used in the data section of a descriptor, it is a set of references to terms that represent enumeration types, object structure types and term wildcards, depending to which data type it is applied"},"_description":{"iso_639_3_eng":"This field is a [set](_set.md) of [global identifiers](_gid.md) which reference terms that represent *enumeration types*, *object structure types* and *term wildcards*. The field is relevant to the [data type](_type.md) of the current descriptor, in that it qualifies what values the current descriptor allows. This field is relevant only to the following [data type](_type.md) values:\n\n- [Key reference](_type_string_key.md): key references are strings representing *term global identifiers*, the *data kind* is ***optional***, if provided it can take *only* the following values:\n  - [Any term](_any-term.md): The descriptor value can reference *any term* of the *terms collection*.\n  - [Any enumeration](_any-enum.md): The descriptor value can reference *any term* that *represents* an *element of a controlled vocabulary*.\n  - [Any structure](_any-object.md): The descriptor value can reference *any term* that contains the [rules section](_rule.md). This kind of term are used to represent *object structure types* or *definitions*\n  - [Any descriptor](any-descriptor.md): The descriptor value can reference *any term* that contains the [data section](_data.md). This kind of term represents a *variable definition*, or *descriptor*.\n- [Enumeration](_type_string_enum.md): enumerations represent *nested controlled vocabularies* organised in a graph, the *data kind* is ***optional***.\n  - If *provided* it should contain *references* to the *enumeration types* to which the current *enumeration element* must *belong* to: there needs to be at least one match.\n  - If is *omitted*, the term reference can point to an *element* of *any enumeration graph*.\n- [Object](_type_object.md):\n  - If *provided*, the *data kind* must contain [key references](_type_string_key.md) to *terms* that define *[data structure types](_term_object.md)*, which are *terms* that *feature* the [rule section](_rule.md) which contains the directives determining which *properties* the *object* *must* or *must not* have.\n  - If *omitted*, the object can have *any structure*. It can also have *any property*, but if any *property matches a descriptor*, the *value* must *match* the *descriptor's directives*. If the property does not match a term, the value can be of any type.\n\nThis property contains a [set](_set.md) of choices, this means that a *value* is *valid* if it belongs to *at least one* of the listed choices. \n\nThis property can only appear in the [scalar](_scalar.md), [set scalar](_set_scalar.md) and [dictionary key](_dict_key.md) container definitions that match the above [data types](_type.md)."}},"_data":{"_class":"_class_category","_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-term"]}}}},{"_key":"_format","_code":{"_nid":"","_lid":"format","_gid":"_format","_aid":["format"]},"_info":{"_title":{"iso_639_3_eng":"Data format"},"_definition":{"iso_639_3_eng":"Format or encoding of the data."},"_description":{"iso_639_3_eng":"This field can be used to indicate that the *value* is *formatted* or *encoded*. The idea is to implement backend functions for validating or processing data provided in the format and handle appropriately the format when returning the data to the user, such as displaying styled text when handling *markdown* or *html*.\n\nIn general, the *data type* will be *string*."},"_examples":{"iso_639_3_eng":"This field can be used to indicate in which standard the *value* is *formatted* or *encoded*. The idea is to implement backend functions for validating or processing data provided in the format and handle appropriately the format when returning the data to the user, such as displaying styled text when handling *markdown* or *html*.\n\nThe [data type](_type.md) of the value will be [string](_type_string.md), these are the currently codified formats:\n\n- [Markdown](_format_markdown.md) [formatted](https://en.wikipedia.org/wiki/Markdown) string.\n- [HTML](_format_html.md) [HyperText](https://en.wikipedia.org/wiki/HTML) markdown formatted string.\n- [URI](_format_uri.md), [Uniform Resource Identifier](https://en.wikipedia.org/wiki/Uniform_Resource_Identifier).\n- [HEX](_format_hex,md): This option indicates that the string should be treated as a [hexadecimal](https://en.wikipedia.org/wiki/Hexadecimal) value.\n- [SVG](_format_svg.md), [Scalable Vector Graphics (SVG)]([Scalable Vector Graphics - Wikipedia](https://en.wikipedia.org/wiki/Scalable_Vector_Graphics)) image as string.\n- [E-mail](_format_email.md), an [electronic mail]([Email - Wikipedia](https://en.wikipedia.org/wiki/Email)) address.\n- [YMD](_format_ymd.md), a string representing a date in `YYYYMMDD` format, where day, or day and month may be omitted.\n- [Date](_format_date.md), a date expressed in [RFC 3339, section 5.6](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6).\n- [Time](_format_time.md), a time expressed in [RFC 3339, section 5.6](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6).\n- [Date-time](_format_date-time.md), a date and time expressed in [RFC 3339, section 5.6](https://datatracker.ietf.org/doc/html/rfc3339#section-5.6).\n- [Hostname](_format_hostname.md), an Internet host name, see [RFC5890, section 2.3.2.3](https://datatracker.ietf.org/doc/html/rfc1123#section-2.1).\n- [IPV4](_format_ipv4.md), an IPv4 Internet address as defined in [RFC 2673, section 3.2](https://tools.ietf.org/html/rfc2673#section-3.2).\n- [IPV6](_format_ipv6.md), an IPv6 Internet address as defined in [RFC 2373, section 2.2](http://tools.ietf.org/html/rfc2373#section-2.2)."}},"_data":{"_class":"_class_category","_scalar":{"_type":"_type_string_enum","_kind":["_format"]}}},{"_key":"_unit","_code":{"_nid":"","_lid":"unit","_gid":"_unit","_aid":["unit"]},"_info":{"_title":{"iso_639_3_eng":"Data unit"},"_definition":{"iso_639_3_eng":"Measurement unit in which the value is expressed."},"_description":{"iso_639_3_eng":"The field represents the *default unit* for the *values* of the descriptor. This means that when storing values, these should be *converted* to this *default unit*. The field is a controlled vocabulary that has the following values:\n\n- Length:\n    - [Kilometres](_unit_length_km.md).\n    - [Meters](_unit_length_m.md).\n    - [Centimetres](_unit_length_cm.md).\n    - [Millimeters](_unit_length_mm.md).\n\n- Area:\n    - [Square kilometres](_unit_area_km.md).\n    - [Square meters](_unit_area_m.md).\n    - [Square centimetres](_unit_area_cm.md).\n    - [Square millimeters](_unit_area_mm.md).\n\n- Weight:\n    - [Kilograms](_unit_weight_kg.md).\n    - [Grams](_unit_weight_g.md).\n    - [Centigrams](_unit_weight_cg.md).\n    - [Milligrams](_unit_weight_mg.md).\n\n- Time:\n    - [Hours](_unit_time_h.md).\n    - [Minutes](_unit_time_m.md).\n    - [Seconds](_unit_time_s.md).\n\n- Age:\n    - [Years](_unit_age_y.md).\n    - [Months](_unit_age_m.md).\n    - [Weeks](_unit_age_w.md).\n    - [Days](_unit_age_d)."}},"_data":{"_class":"_class_category","_scalar":{"_type":"_type_string_enum","_kind":["_unit"]}}},{"_key":"_unit-name","_code":{"_nid":"","_lid":"unit-name","_gid":"_unit-name","_aid":["unit-name"]},"_info":{"_title":{"iso_639_3_eng":"Data unit name"},"_definition":{"iso_639_3_eng":"Name of the measurement unit in which the value is expressed."},"_description":{"iso_639_3_eng":"This field can be used to indicate the *data unit* of the *value* in the event the [units controlled vocabulary](_unit.md) does not feature it."}},"_data":{"_class":"_class_identifier","_scalar":{"_type":"_type_string"}}},{"_key":"_unit-symbol","_code":{"_nid":"","_lid":"unit-symbol","_gid":"_unit-symbol","_aid":["unit-symbol"]},"_info":{"_title":{"iso_639_3_eng":"Data unit symbol"},"_definition":{"iso_639_3_eng":"Symbol of the measurement unit in which the value is expressed."},"_description":{"iso_639_3_eng":"This field can be used to indicate the *symbol* of the *data unit*, in the event the [units controlled vocabulary](_unit.md) does not feature the unit."}},"_data":{"_class":"_class_identifier","_scalar":{"_type":"_type_string"}}},{"_key":"_regexp","_code":{"_nid":"","_lid":"regexp","_gid":"_regexp","_aid":["regexp"]},"_info":{"_title":{"iso_639_3_eng":"Validation pattern"},"_definition":{"iso_639_3_eng":"Regular expression for validating the value."},"_description":{"iso_639_3_eng":"This field can be used to *validate* [string](_string.md) data by ensuring it follows a predefined *pattern*. This pattern is a *regular expression*, *regex*, according to the [ECMA 262](http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf) dialect.\n\nThis property normally belongs to the [data section](_data.md), however, besides being used in [descriptors](_term_descriptor.md) it can also be used in [controlled vocabulary](_type_string_enum.md) types to indicate the pattern of the enumeration codes. In that case it can be added to the [identification section](_code.md).\n\nIf this property is used in a [descriptor](_term_descriiptor.md) that also serves as [enumeration](_type_string_enum.md) type, it will refer to the pattern applied to the [local identifier](_lid.md), or enumeration code."},"_examples":{"iso_639_3_eng":"- `the.\\*fox`: Will *match* \"*the quick brown fox*\".\n- `^[A-Z]{3}[0-9]{4}$`: Will *match* \"*ITA1234*\".\n- `^[A-Z]{3}[0-9]{4}$`: Will *not match* \"*ITA123*\".\n- `^[A-Z]{3}[0-9]{4}$`: Will *not match* \"*ITA123456*\"."}},"_data":{"_scalar":{"_type":"_type_string"}}},{"_key":"_elements","_code":{"_nid":"","_lid":"elements","_gid":"_elements","_aid":["elements"]},"_info":{"_title":{"iso_639_3_eng":"Allowed number of elements"},"_definition":{"iso_639_3_eng":"This field indicates the allowed range of elements for arrays and sets."},"_description":{"iso_639_3_eng":"This field is used to *limit* the *number of items* in [arrays](_array.md) or [sets](_set.md). It is a *discrete range* that must be *greater than zero*."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_elements\": {\n\t\t\"_min-items\": 1,\n\t\t\"_max-items\": 8\n\t}\n}\n```\nThe [array](_array.md) or [set](_set.md) can have between `1` and `8` elements.\n\n\n\n```json\n{\n\t\"_elements\": {\n\t\t\"_min-items\": 0\n\t}\n}\n```\nThe [array](_array.md) or [set](_set.md) must have at least *one* element.\n\n\n\n```json\n{\n\t\"_elements\": {\n\t\t\"_max-items\": 10\n\t}\n}\n```\nThe [array](_array.md) or [set](_set.md) must have *less* than 10 items."}},"_data":{"_class":"_class_quantity","_scalar":{"_type":"_type_object","_kind":["_elements"]}},"_rule":{"_required":{"_selection-descriptors_any":["_min-items","_max-items"]}}},{"_key":"_range","_code":{"_nid":"","_lid":"range","_gid":"_range","_aid":["range"]},"_info":{"_title":{"iso_639_3_eng":"Range of numbers"},"_definition":{"iso_639_3_eng":"This property indicates a generic range of numbers."},"_description":{"iso_639_3_eng":"This property can be used to indicate a [continuous](_type_number.md) numeric *range*, this range may *ignore* the *lower* or *upper* bound, and it allows specifying whether the *bounds* are *included* in the range, or not. The property is an object that may contain the following combination of elements:\n\n- [Minimum range inclusive](_min-range-inclusive.md): The value must be greater than or equal to the bound.\n- [Minimum range exclusive](_min-range-exclusive.md): The value must be greater than the bound.\n- [Maximum range inclusive](_max-range-inclusive.md): The value must be less than or equal to the bound.\n- [Maximum range exclusive](_max-range-exclusive.md): The value must be less than the bound.\n\nIt is possible to omit the minimum or maximum bound.\n\nThe *range* defined by this property is *generic*, this means that values out of the range are not necessarily expected to be incorrect."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_range\": {\n\t\t\"_min-range-inclusive\": 0.0,\n\t\t\"_max-range-inclusive\": 100.0\n\t}\n}\n```\nThis represents a *percentage range*, values are *greater* than or *equal* to `0` and smaller or equal to `100`. Fractional values are allowed.\n\n\n\n```json\n{\n\t\"_range\": {\n\t\t\"_min-range-inclusive\": 0,\n\t\t\"_max-range-inclusive\": 100\n\t}\n}\n```\nSame as above, except that we use integers. Fractional values are allowed.\n\n\n\n```json\n{\n\t\"_range\": {\n\t\t\"_min-range-exclusive\": 0\n\t}\n}\n```\nValues are greater than `0`. Fractional values are allowed."}},"_data":{"_class":"_class_quantity_averaged","_scalar":{"_type":"_type_object","_kind":["_range"]}},"_rule":{"_required":{"_selection-descriptors_one-none-of":[["_min-range-inclusive","_min-range-exclusive"],["_max-range-inclusive","_max-range-exclusive"]]}}},{"_key":"_range_string","_code":{"_nid":"_range","_lid":"string","_gid":"_range_string","_aid":["string"]},"_info":{"_title":{"iso_639_3_eng":"Range of strings"},"_definition":{"iso_639_3_eng":"This property indicates a generic range of strings."},"_description":{"iso_639_3_eng":"This property can be used to indicate a string *range*, this range may *ignore* the *lower* or *upper* bound, and it allows specifying whether the *bounds* are *included* in the range, or not. The property is an object that may contain the following combination of elements:\n\n- [Minimum range inclusive](_min-range-inclusive_string.md): The value must be greater than or equal to the bound.\n- [Minimum range exclusive](_min-range-exclusive_string.md): The value must be greater than the bound.\n- [Maximum range inclusive](_max-range-inclusive_string.md): The value must be less than or equal to the bound.\n- [Maximum range exclusive](_max-range-exclusive_string.md): The value must be less than the bound.\n\nIt is possible to omit the minimum or maximum bound.\n\nThe *range* defined by this property is *generic*, this means that values out of the range are not necessarily expected to be incorrect."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_range\": {\n\t\t\"_min-range-inclusive_string\": \"1950\",\n\t\t\"_max-range-inclusive_string\": \"19991231\"\n\t}\n}\n```\n\nThis represents a *date range*, values are *greater* than or *equal* to `1950` and smaller or equal to `19991231`. This interval includes year, month and day dates starting from 1950 and includes year, month and day dates including all 1999.\n\n\n\n```json\n{\n\t\"_range\": {\n\t\t\"_min-range-exclusive_string\": \"195001\"\n\t}\n}\n```\n\nValues are greater than `January 1950`.\nThis includes all dates greater or equal to february 1950."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_range_string"]}},"_rule":{"_required":{"_selection-descriptors_one-none-of":[["_min-range-inclusive_string","_min-range-exclusive_string"],["_max-range-inclusive_string","_max-range-exclusive_string"]]}}},{"_key":"_range_date","_code":{"_nid":"_range","_lid":"date","_gid":"_range_date","_aid":["date"]},"_info":{"_title":{"iso_639_3_eng":"Range of dates"},"_definition":{"iso_639_3_eng":"This property indicates a generic range of dates"},"_description":{"iso_639_3_eng":"This property can be used to indicate a (date)[_type_string_date.md] *range*, this range may *ignore* the *lower* or *upper* bound, and it allows specifying whether the *bounds* are *included* in the range, or not. The property is an object that may contain the following combination of elements:\n\n- [Minimum range inclusive](_min-range-inclusive_date.md): The value must be greater than or equal to the bound.\n- [Minimum range exclusive](_min-range-exclusive_date.md): The value must be greater than the bound.\n- [Maximum range inclusive](_max-range-inclusive_date.md): The value must be less than or equal to the bound.\n- [Maximum range exclusive](_max-range-exclusive_date.md): The value must be less than the bound.\n\nIt is possible to omit the minimum or maximum bound.\n\nThe *range* defined by this property is *generic*, this means that values out of the range are not necessarily expected to be incorrect."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_range\": {\n\t\t\"_min-range-inclusive_date\": \"1950\",\n\t\t\"_max-range-inclusive_date\": \"19991231\"\n\t}\n}\n```\n\nThis represents a *date range*, values are *greater* than or *equal* to `1950` and smaller or equal to `19991231`. This interval includes year, month and day dates starting from 1950 and includes year, month and day dates including all 1999.\n\n\n\n```json\n{\n\t\"_range\": {\n\t\t\"_min-range-exclusive_date\": \"195001\"\n\t}\n}\n```\n\nValues are greater than `January 1950`.\nThis includes all dates greater or equal to february 1950."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_range_date"]}},"_rule":{"_required":{"_selection-descriptors_one-none-of":[["_min-range-inclusive_date","_min-range-exclusive_date"],["_max-range-inclusive_date","_max-range-exclusive_date"]]}}},{"_key":"_valid-range","_code":{"_nid":"","_lid":"valid-range","_gid":"_valid-range","_aid":["valid-range"]},"_info":{"_title":{"iso_639_3_eng":"Valid number range"},"_definition":{"iso_639_3_eng":"This field indicates the allowed range for numbers, values that are out of range are considered invalid."},"_description":{"iso_639_3_eng":"This property defines the range within which a value can be considered correct. Values that out of this range are considered errors. This [continuous](_type_number.md) numeric *range* may *ignore* the *lower* or *upper* bound, and it allows specifying whether the *bounds* are *included* in the range, or not. The property is an object that may contain the following combination of elements:\n\n- [Minimum range inclusive](_min-range-inclusive.md): The value must be greater than or equal to the bound.\n- [Minimum range exclusive](_min-range-exclusive.md): The value must be greater than the bound.\n- [Maximum range inclusive](_max-range-inclusive.md): The value must be less than or equal to the bound.\n- [Maximum range exclusive](_max-range-exclusive.md): The value must be less than the bound.\n\nIt is possible to omit the minimum or maximum bound.\n\nValues that *do not belong* in the *range* interval are considered *incorrect*."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_valid-range\": {\n\t\t\"_min-range-inclusive\": 0.0,\n\t\t\"_max-range-inclusive\": 100.0\n\t}\n}\n```\nThis *range* considers all values greater than `100.0` and smaller than `0.0` to be errors.\n\n\n\n```json\n{\n\t\"_valid-range\": {\n\t\t\"_min-range-inclusive\": 0,\n\t\t\"_max-range-inclusive\": 100\n\t}\n}\n```\nThis *range* is equivalent to the first one, except that in this case we don't add decimals to the bounds.\n\n\n\n```json\n{\n\t\"_valid-range\": {\n\t\t\"_min-range-exclusive\": 0\n\t}\n}\n```\nThis *range* considers all positive values greater than 0 to be correct."}},"_data":{"_class":"_class_quantity_averaged","_scalar":{"_type":"_type_object","_kind":["_range"]}}},{"_key":"_valid-range_string","_code":{"_nid":"_valid-range","_lid":"string","_gid":"_valid-range_string","_aid":["string"]},"_info":{"_title":{"iso_639_3_eng":"Valid string range"},"_definition":{"iso_639_3_eng":"This field indicates the allowed range for strings, values that are out of range are considered invalid."},"_description":{"iso_639_3_eng":"This property defines the range within which a value can be considered correct. Values that out of this range are considered errors. This string *range* may *ignore* the *lower* or *upper* bound, and it allows specifying whether the *bounds* are *included* in the range, or not. The property is an object that may contain the following combination of elements:\n\n- [Minimum range inclusive](_min-range-inclusive_string.md): The value must be greater than or equal to the bound.\n- [Minimum range exclusive](_min-range-exclusive_string.md): The value must be greater than the bound.\n- [Maximum range inclusive](_max-range-inclusive_string.md): The value must be less than or equal to the bound.\n- [Maximum range exclusive](_max-range-exclusive_string.md): The value must be less than the bound.\n\nIt is possible to omit the minimum or maximum bound.\n\nValues that *do not belong* in the *range* interval are considered *incorrect*."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_valid-range_string\": {\n\t\t\"_min-range-inclusive_string\": \"1950\",\n\t\t\"_max-range-inclusive_string\": \"19591231\"\n\t}\n}\n```\n\nThis *range* considers all values greater than `1950` and smaller than `19591231` to be errors.\nThe range includes all strings that are between 1950 and 19591231.\n\n\n\n```json\n{\n\t\"_valid-range_string\": {\n\t\t\"_min-range-exclusive_string\": \"19491231\"\n\t}\n}\n```\n\nThis *range* considers all strings starting from 1950 to be correct."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_range_string"]}}},{"_key":"_valid-range_date","_code":{"_nid":"_valid-range","_lid":"date","_gid":"_valid-range_date","_aid":["date"]},"_info":{"_title":{"iso_639_3_eng":"Valid date range"},"_definition":{"iso_639_3_eng":"This field indicates the allowed range for dates, values that are out of range are considered invalid."},"_description":{"iso_639_3_eng":"This property defines the range within which a (date)[_type_string_date.md] can be considered correct. Values that out of this range are considered errors. This date *range* may *ignore* the *lower* or *upper* bound, and it allows specifying whether the *bounds* are *included* in the range, or not. The property is an object that may contain the following combination of elements:\n\n- [Minimum range inclusive](_min-range-inclusive_date.md): The value must be greater than or equal to the bound.\n- [Minimum range exclusive](_min-range-exclusive_date.md): The value must be greater than the bound.\n- [Maximum range inclusive](_max-range-inclusive_date.md): The value must be less than or equal to the bound.\n- [Maximum range exclusive](_max-range-exclusive_date.md): The value must be less than the bound.\n\nIt is possible to omit the minimum or maximum bound.\n\nValues that *do not belong* in the *range* interval are considered *incorrect*."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_valid-range_date\": {\n\t\t\"_min-range-inclusive_date\": \"1950\",\n\t\t\"_max-range-inclusive_date\": \"19591231\"\n\t}\n}\n```\n\nThis *range* considers all values greater than `1950` and smaller than `19591231` to be errors.\nThe range includes all dates, year, month or day, that are between 1950 and december 31st 1959.\n\n\n\n```json\n{\n\t\"_valid-range_date\": {\n\t\t\"_min-range-exclusive_date\": \"19491231\"\n\t}\n}\n```\n\nThis *range* considers all dates, year, month or day, starting from 1950 to be correct."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_range_date"]}}},{"_key":"_normal-range","_code":{"_nid":"","_lid":"normal-range","_gid":"_normal-range","_aid":["normal-range"]},"_info":{"_title":{"iso_639_3_eng":"Normal range of numbers"},"_definition":{"iso_639_3_eng":"This field indicates the normal range for numbers, values that are out of range are considered outliers, not errors."},"_description":{"iso_639_3_eng":"This property defines the range in which values are considered *normal*, values out of this range are considered *outliers*. This [continuous](_type_number.md) numeric *range* may *ignore* the *lower* or *upper* bound, and it allows specifying whether the *bounds* are *included* in the range, or not. The property is an object that may contain the following combination of elements:\n\n- [Minimum range inclusive](_min-range-inclusive.md): The value must be greater than or equal to the bound.\n- [Minimum range exclusive](_min-range-exclusive.md): The value must be greater than the bound.\n- [Maximum range inclusive](_max-range-inclusive.md): The value must be less than or equal to the bound.\n- [Maximum range exclusive](_max-range-exclusive.md): The value must be less than the bound.\n\nIt is possible to omit the minimum or maximum bound.\n\nOut of range values are considered outliers."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_normal-range\": {\n\t\t\"_min-range-inclusive\": 0.0,\n\t\t\"_max-range-inclusive\": 100.0\n\t}\n}\n```\nThis *range* considers all values greater than `100.0` or smaller than `0.0` to be outliers.\n\n\n\n```json\n{\n\t\"_normal-range\": {\n\t\t\"_min-range-inclusive\": 0,\n\t\t\"_max-range-inclusive\": 100\n\t}\n}\n```\nThis *range* is equivalent to the first one, except that in this case we don't add decimals to the bounds.\n\n\n\n```json\n{\n\t\"_normal-range\": {\n\t\t\"_min-range-exclusive\": 0\n\t}\n}\n```\nThis *range* considers all positive values greater than 0 to be normal, and all others to be outliers.\n\n"}},"_data":{"_class":"_class_quantity_averaged","_scalar":{"_type":"_type_object","_kind":["_range"]}}},{"_key":"_normal-range_string","_code":{"_nid":"_normal-range","_lid":"string","_gid":"_normal-range_string","_aid":["string"]},"_info":{"_title":{"iso_639_3_eng":"Normal range of strings"},"_definition":{"iso_639_3_eng":"This field indicates the normal range for strings, values that are out of range are considered outliers, not errors."},"_description":{"iso_639_3_eng":"This property defines the range in which values are considered *normal*, values out of this range are considered *outliers*. This string *range* may *ignore* the *lower* or *upper* bound, and it allows specifying whether the *bounds* are *included* in the range, or not. The property is an object that may contain the following combination of elements:\n\n- [Minimum range inclusive](_min-range-inclusive_string.md): The value must be greater than or equal to the bound.\n- [Minimum range exclusive](_min-range-exclusive_string.md): The value must be greater than the bound.\n- [Maximum range inclusive](_max-range-inclusive_string.md): The value must be less than or equal to the bound.\n- [Maximum range exclusive](_max-range-exclusive_string.md): The value must be less than the bound.\n\nIt is possible to omit the minimum or maximum bound.\n\nOut of range values are considered outliers."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_normal-range_string\": {\n\t\t\"_min-range-inclusive_string\": \"1950\",\n\t\t\"_max-range-inclusive_string\": \"19591231\"\n\t}\n}\n```\n\nThis *range* considers all values greater than `1950` and smaller than `19591231` to be errors.\nThe range includes all dates, year, month or day, that are between 1950 and december 31st 1959, values out of this range are considered *outliers*.\n\n\n\n```json\n{\n\t\"_normal-range_string\": {\n\t\t\"_min-range-exclusive_string\": \"19491231\"\n\t}\n}\n```\n\nThis *range* considers all dates, year, month or day, starting from 1950 to be correct.\nValues out of thus range are considered *outliers*."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_range_string"]}}},{"_key":"_normal-range_date","_code":{"_nid":"_normal-range","_lid":"date","_gid":"_normal-range_date","_aid":["date"]},"_info":{"_title":{"iso_639_3_eng":"Normal range of dates"},"_definition":{"iso_639_3_eng":"This field indicates the normal range for dates, values that are out of range are considered outliers, not errors."},"_description":{"iso_639_3_eng":"This property defines the range in which values are considered *normal*, values out of this range are considered *outliers*. This date *range* may *ignore* the *lower* or *upper* bound, and it allows specifying whether the *bounds* are *included* in the range, or not. The property is an object that may contain the following combination of elements:\n\n- [Minimum range inclusive](_min-range-inclusive_date.md): The value must be greater than or equal to the bound.\n- [Minimum range exclusive](_min-range-exclusive_date.md): The value must be greater than the bound.\n- [Maximum range inclusive](_max-range-inclusive_date.md): The value must be less than or equal to the bound.\n- [Maximum range exclusive](_max-range-exclusive_date.md): The value must be less than the bound.\n\nIt is possible to omit the minimum or maximum bound.\n\nOut of range values are considered outliers."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_normal-range_date\": {\n\t\t\"_min-range-inclusive_date\": \"1950\",\n\t\t\"_max-range-inclusive_date\": \"19591231\"\n\t}\n}\n```\n\nThis *range* considers all dates greater than `1950` and smaller than `19591231` to be errors.\nThe range includes all dates, year, month or day, that are between 1950 and december 31st 1959, values out of this range are considered *outliers*.\n\n\n\n```json\n{\n\t\"_normal-range_sdate\": {\n\t\t\"_min-range-exclusive_date\": \"19491231\"\n\t}\n}\n```\n\nThis *range* considers all dates, year, month or day, starting from 1950 to be correct.\nValues out of thus range are considered *outliers*."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_range_date"]}}},{"_key":"_min-items","_code":{"_nid":"","_lid":"min-items","_gid":"_min-items","_aid":["min-items"]},"_info":{"_title":{"iso_639_3_eng":"Minimum number of elements"},"_definition":{"iso_639_3_eng":"This field indicates the minimum number of elements an item may contain."},"_description":{"iso_639_3_eng":"This field can be used to indicate the *minimum number* of *elements* an item may contain. The property is used by the elements range [descriptor](_elements.md) to indicate the minimum bound for [array](_array.md) and [set](_set.md) data [container](_data.md) [elements](_elements.md).\n\nThe value is an *integer* and the *bound* is *inclusive*, the item to which the property refers to cannot have *less* elements than the value held by this field."}},"_data":{"_class":"_class_quantity","_scalar":{"_type":"_type_integer","_valid-range":{"_min-range-inclusive":0}}}},{"_key":"_max-items","_code":{"_nid":"","_lid":"max-items","_gid":"_max-items","_aid":["max-items"]},"_info":{"_title":{"iso_639_3_eng":"Maximum number of elements"},"_definition":{"iso_639_3_eng":"This field indicates the maximum number of elements an item may contain."},"_description":{"iso_639_3_eng":"This field can be used to indicate the *maximum number* of *elements* an item may contain. The property is used by the elements range [descriptor](_elements.md) to indicate the maximum bound for [array](_array.md) and [set](_set.md) data [container](_data.md) [elements](_elements.md).\n\nThe value is an *integer* and the *bound* is *inclusive*, the item to which the property refers to cannot have *more* elements than the value held by this field."}},"_data":{"_class":"_class_quantity","_scalar":{"_type":"_type_integer"}}},{"_key":"_min-range-inclusive","_code":{"_nid":"","_lid":"min-range-inclusive","_gid":"_min-range-inclusive","_aid":["min-range-inclusive"]},"_info":{"_title":{"iso_639_3_eng":"Range minimum inclusive"},"_definition":{"iso_639_3_eng":"This field indicates the minimum value in a range, including the bound value."},"_description":{"iso_639_3_eng":"This field is relevant only for *numeric* [discrete](_type_integer) or [continuous](_type_number) data, it indicates the *minimum bound* of a [range](_range.md), *including* the *bound* value. Only numbers *greater or equal* to this field's value belong to the [range](_range.md)."}},"_data":{"_class":"_class_quantity_averaged","_scalar":{"_type":"_type_number"}}},{"_key":"_min-range-inclusive_string","_code":{"_nid":"_min-range-inclusive","_lid":"string","_gid":"_min-range-inclusive_string","_aid":["string"]},"_info":{"_title":{"iso_639_3_eng":"String range minimum inclusive"},"_definition":{"iso_639_3_eng":"This field indicates the minimum value in a range, including the bound value."},"_description":{"iso_639_3_eng":"This field is relevant only for *string* data, it indicates the *minimum bound* of a [range](_range_string.md), *including* the *bound* value. Only strings *greater or equal* to this field's value belong to the [range](_range_string.md)."}},"_data":{"_scalar":{"_type":"_type_string"}}},{"_key":"_min-range-inclusive_date","_code":{"_nid":"_min-range-inclusive","_lid":"date","_gid":"_min-range-inclusive_date","_aid":["date"]},"_info":{"_title":{"iso_639_3_eng":"Date range minimum inclusive"},"_definition":{"iso_639_3_eng":"This field indicates the minimum value in a range, including the bound value."},"_description":{"iso_639_3_eng":"This field is relevant only for (dates)[_type_string_date.md], it indicates the *minimum bound* of a [range](_range_date.md), *including* the *bound* value. Only dates *greater or equal* to this field's value belong to the [range](_range_string.md)."}},"_data":{"_scalar":{"_type":"_type_string_date"}}},{"_key":"_max-range-inclusive","_code":{"_nid":"","_lid":"max-range-inclusive","_gid":"_max-range-inclusive","_aid":["max-range-inclusive"]},"_info":{"_title":{"iso_639_3_eng":"Range maximum inclusive"},"_definition":{"iso_639_3_eng":"This field indicates the maximum value in a range, including the bound value."},"_description":{"iso_639_3_eng":"This field is relevant only for *numeric* [discrete](_type_integer) or [continuous](_type_number) data, it indicates the *maximum bound* of a [range](_range.md), *including* the *bound* value. Only numbers *smaller or equal* to this field's value belong to the [range](_range.md)."}},"_data":{"_class":"_class_quantity_averaged","_scalar":{"_type":"_type_number"}}},{"_key":"_max-range-inclusive_string","_code":{"_nid":"_max-range-inclusive","_lid":"string","_gid":"_max-range-inclusive_string","_aid":["string"]},"_info":{"_title":{"iso_639_3_eng":"String range maximum inclusive"},"_definition":{"iso_639_3_eng":"This field indicates the maximum value in a range, including the bound value."},"_description":{"iso_639_3_eng":"This field is relevant only for *string* data, it indicates the *maximum bound* of a [range](_range_string.md), *including* the *bound* value. Only strings *smaller or equal* to this field's value belong to the [range](_range_string.md)."}},"_data":{"_scalar":{"_type":"_type_string"}}},{"_key":"_max-range-inclusive_date","_code":{"_nid":"_max-range-inclusive","_lid":"date","_gid":"_max-range-inclusive_date","_aid":["date"]},"_info":{"_title":{"iso_639_3_eng":"Date range maximum inclusive"},"_definition":{"iso_639_3_eng":"This field indicates the maximum value in a range, including the bound value."},"_description":{"iso_639_3_eng":"This field is relevant only for (date)[_tupe_string_date.md] data, it indicates the *maximum bound* of a [range](_range_date.md), *including* the *bound* value. Only strings *smaller or equal* to this field's value belong to the [range](_range_date.md)."}},"_data":{"_scalar":{"_type":"_type_string_date"}}},{"_key":"_min-range-exclusive","_code":{"_nid":"","_lid":"min-range-exclusive","_gid":"_min-range-exclusive","_aid":["min-range-exclusive"]},"_info":{"_title":{"iso_639_3_eng":"Range minimum exclusive"},"_definition":{"iso_639_3_eng":"This field indicates the minimum value in a range, excluding the bound value."},"_description":{"iso_639_3_eng":"This field is relevant only for *numeric* [discrete](_type_integer) or [continuous](_type_number) data, it indicates the *minimum bound* of a [range](_range.md), *excluding* the *bound* value. Only numbers *greater* than this field's value belong to the [range](_range.md)."}},"_data":{"_class":"_class_quantity_averaged","_scalar":{"_type":"_type_number"}}},{"_key":"_min-range-exclusive_string","_code":{"_nid":"_min-range-exclusive","_lid":"string","_gid":"_min-range-exclusive_string","_aid":["string"]},"_info":{"_title":{"iso_639_3_eng":"String range minimum exclusive"},"_definition":{"iso_639_3_eng":"This field indicates the minimum value in a range, excluding the bound value."},"_description":{"iso_639_3_eng":"This field is relevant only for *string* data, it indicates the *minimum bound* of a [range](_range_string.md), *excluding* the *bound* value. Only strings *greater* than this field's value belong to the [range](_range_string.md)."}},"_data":{"_scalar":{"_type":"_type_string"}}},{"_key":"_min-range-exclusive_date","_code":{"_nid":"_min-range-exclusive","_lid":"date","_gid":"_min-range-exclusive_date","_aid":["date"]},"_info":{"_title":{"iso_639_3_eng":"Date range minimum exclusive"},"_definition":{"iso_639_3_eng":"This field indicates the minimum value in a range, excluding the bound value."},"_description":{"iso_639_3_eng":"This field is relevant only for (date)[_type_string_date.md] data, it indicates the *minimum bound* of a [range](_range_date.md), *excluding* the *bound* value. Only strings *greater* than this field's value belong to the [range](_range_date.md)."}},"_data":{"_scalar":{"_type":"_type_string_date"}}},{"_key":"_max-range-exclusive","_code":{"_nid":"","_lid":"max-range-exclusive","_gid":"_max-range-exclusive","_aid":["max-range-exclusive"]},"_info":{"_title":{"iso_639_3_eng":"Range maximum exclusive"},"_definition":{"iso_639_3_eng":"This field indicates the maximum value in a range, excluding the bound value."},"_description":{"iso_639_3_eng":"This field is relevant only for *numeric* [discrete](_type_integer) or [continuous](_type_number) data, it indicates the *maximum bound* of a [range](_range.md), *excluding* the *bound* value. Only numbers *smaller* than this field's value belong to the [range](_range.md)."}},"_data":{"_class":"_class_quantity_averaged","_scalar":{"_type":"_type_number"}}},{"_key":"_max-range-exclusive_string","_code":{"_nid":"_max-range-exclusive","_lid":"string","_gid":"_max-range-exclusive_string","_aid":["string"]},"_info":{"_title":{"iso_639_3_eng":"String range maximum exclusive"},"_definition":{"iso_639_3_eng":"This field indicates the maximum value in a range, excluding the bound value."},"_description":{"iso_639_3_eng":"This field is relevant only for *string* data, it indicates the *maximum bound* of a [range](_range_string.md), *excluding* the *bound* value. Only strings *smaller* than this field's value belong to the [range](_range_string.md)."}},"_data":{"_scalar":{"_type":"_type_string"}}},{"_key":"_max-range-exclusive_date","_code":{"_nid":"_max-range-exclusive","_lid":"date","_gid":"_max-range-exclusive_date","_aid":["date"]},"_info":{"_title":{"iso_639_3_eng":"Date range maximum exclusive"},"_definition":{"iso_639_3_eng":"This field indicates the maximum value in a range, excluding the bound value."},"_description":{"iso_639_3_eng":"This field is relevant only for (date)[_type_string_date.md] data, it indicates the *maximum bound* of a [range](_range_date.md), *excluding* the *bound* value. Only strings *smaller* than this field's value belong to the [range](_range_date.md)."}},"_data":{"_scalar":{"_type":"_type_string_date"}}},{"_key":"_decimals","_code":{"_nid":"","_lid":"decimals","_gid":"_decimals","_aid":["decimals"]},"_info":{"_title":{"iso_639_3_eng":"Decimals"},"_definition":{"iso_639_3_eng":"Number of decimals to display"},"_description":{"iso_639_3_eng":"This value determines the maximum number of decimals to display."}},"_data":{"_class":"_class_quantity","_scalar":{"_type":"_type_integer","_valid-range":{"_min-range-inclusive":0,"_max-range-inclusive":12}}}},{"_key":"_array_prefix","_code":{"_nid":"_array","_lid":"prefix","_gid":"_array_prefix","_aid":["prefix"]},"_info":{"_title":{"iso_639_3_eng":"Array prefix"},"_definition":{"iso_639_3_eng":"Prefix used when distributin the array elements into their individual columns"},"_description":{"iso_639_3_eng":"This field is used when exploding the values of an array in a table. Rather than displaying a list of comma delimited values in a single column, the values will all have their own column with a header containing the string set in this variable followed by the index number of the array element (base 1).\n\nThis also means that the table needs to accomodate header rows that can merge cells together, since we need two header rows: one for the scalar indicators and one for the elements of the array values.\n\nThis field should be used at the top level `_array` or `_set` instance in the data section. The data section must either be an array or set which contains scalar elements. Nested arrays will not be considered.\n\nThis value is only considered when generating table data, it has no other function."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_code\": {\n\t\t\"_gid\": \"chr_AdmIndexMain\",\n\t\t...\n\t},\n\t\"_info\": {\n\t\t...\n\t},\n\t\"_data\": {\n\t\t\"_array\": {\n\t\t\t\"_array_prefix\": \"Q\",\n\t\t\t\"_scalar\": {\n\t\t\t\t\"_type\": \"_type_number\",\n\t\t\t\t\"_decimals\": 4,\n\t\t\t\t\"_valid-range\": {\n\t\t\t\t\t\"_min-range-inclusive\": 0.0,\n\t\t\t\t\t\"_max-range-inclusive\": 1.0\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n```\n\nAbove is the partial *definition* of the \"Admixture index\" indicator in the data dictionary. In the [data section](_data.md) you see that this variable is defined as an [array](_array.md), below this array section you see that the array prefix is set to the letter \"Q\".\n\n```json\n{\n\t\"gcu_id_number\": \"ALB00001\",\n\t\"species\": \"Abies alba\",\n\t\"chr_AdmIndexMain\": [ 0.8554, 0.1000, 0.0446 ],\n\t...\n},\n  ...\n```\n\nAbove is an *example* of a *data record*: we have GCU and species, that are required by the indicator, and the value of admixture index which is an array of three elements.\n\n|                   |             | *Admixture* | *index* | *main* |\n| ----------------- | ----------- | ----------- | ------- | ------ |\n| **gcu_id_number** | **species** | **Q1**      | **Q3**  | **Q2** |\n| ALB00001          | Abies alba  | 0.8554      | 0.0446  | 0.1000 |\n\nAbove is a table example of the resulting data. You will see that the first two columns are scalar columns, while the three last columns all belong to the admixture index indicator. Setting array prefix to \"Q\" will split the elements of the array into three separate columns which all belong to the admixture indicator and feature a header prefixed with the \"Q\" character.\n\nAs you may have realised, looking at this example, you will need two header rows with the first row grouping together the last three columns, a thing that I don't know how to do in pure Markdown..."}},"_data":{"_scalar":{"_type":"_type_string"}}}]