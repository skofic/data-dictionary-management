[{"_key":"_predicate","_code":{"_nid":"","_lid":"predicate","_gid":"_predicate","_aid":["predicate"]},"_info":{"_title":{"iso_639_3_eng":"Relationship predicate"},"_definition":{"iso_639_3_eng":"Type or classification of the relationship."},"_description":{"iso_639_3_eng":"A relationship predicate indicates the *type*, *nature* or *class* of a relationship. You may have several edges connecting the same nodes, but each edge must have a *different* predicate: this means that the combination of [subject](_from.md), *predicate* and [object](_to.md) must be unique.\n\nPredicates are indicated as the [key](_key.md) of the *term* that *identifies* the *relationship type*, This term is itself also the *root* of a *controlled vocabulary* that *defines* all the *default relationship enumerations* of the *data dictionary*, which are used to define *controlled vocabularies*, *object data structures* and other generic *graphs*, these are the default predicates:\n\n- [Enumeration of](_predicate_enum-of.md): The [subject](_from.md) node is a *controlled vocabulary element* of the [object](_to.md) node.\n- [Property of](_predicate_property-of): The [subject](_from.md) node is a *property* of the [object](_to.md) node which represents a [data structure](_type_object.md).\n- [Section of](_predicate_section-of): The [object](_to.md) node is a *category* or *group* of the [subject](_from.md) node.\n- [Bridge of](_predicate_bridge-of): The [object](_to.md) node graph passes through the [subject](_from.md) node, but the [subject](_from.md) node will not be a member of the [object](_to.md) node's graph.\n\nThis property is required in all [edges](_edge.md)."}},"_data":{"_class":"_class_category","_scalar":{"_type":"_type_string_enum","_kind":["_predicate"]}}},{"_key":"_path","_code":{"_nid":"","_lid":"path","_gid":"_path","_aid":["path"]},"_info":{"_title":{"iso_639_3_eng":"Relationship paths"},"_definition":{"iso_639_3_eng":"Set of path roots that share the edge."},"_description":{"iso_639_3_eng":"[Edges](_edge.md) are uniquely identified by their [subject](_from.md), [predicate](_predicate.md) and [object](_to.md) combination. In order to have more than one graph share the same edge, we list in this field all the graph *root* [nodes](_id.md) whose path uses the edge.\n\nThis property represents the *set* of all *graphs* that *share* this specific [edge](_edge.md)."}},"_data":{"_class":"_class_reference","_set":{"_set_scalar":{"_set_type":"_type_string_handle"}}}},{"_key":"_path_data","_code":{"_nid":"_path","_lid":"data","_gid":"_path_data","_aid":["data"]},"_info":{"_title":{"iso_639_3_eng":"Paths data"},"_definition":{"iso_639_3_eng":"A key/value dictionary whose data characterises the current relationship"},"_description":{"iso_639_3_eng":"[Edges](_edge.md) are *uniquely identified* by their [subject](_from.md)-[predicate](_predicate.md)-[object](_to.md) combination, there *cannot* be two edges *sharing* the same *combination*. The edge [path](_path.md) property indicates which graph *root* [nodes](_id.md) have a path *tracersing* the *current edge*. This property allows associating *data* to the [subject](_from.md)-[predicate](_predicate.md)-[object](_to.md) combination and the graph paths that traverse it.\n\nThe dictionary data characterises the combination of the [subject](_from.md)-[predicate](_predicate.md)-[object](_to.md) group with the reference contained in the dictionary keys. The dictionary keys must match the elements of the [path](_path.md) property, in addition, you may also have other keys that reference documents in the terms or other collections.\n\nThe data elements of the dictionary must be object, their default value is an empty object."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_key\": \"<edge hash>\",\n  \"_from\": \"locations/Roma\",\n  \"_predicate\": \"_predicate_travel-to\",\n  \"_to\": \"locations/Milano\",\n  \"_path\": [\n    \"airlines/airline-A\",\n    \"airlines/airline-B\"\n  ],\n  \"_path_data\": {\n    \"airlines/airline-A\": {\n      \"price\": 150,\n      \"duration\": 75\n    },\n    \"airlines/airline-B\": {\n      \"price\": 200,\n      \"duration\": 45\n    }\n  }\n}\n```\n\nThe above example describes an edge representing the travel route from *Rome* to *Milan* that is provided by *two airlines*: *airline-A* and *airline-B*. *Airline-A* offers the trip with a *price* of *150* for a travel *duration* of *75*, while *airline-B* offers the trip with a *cost* of *200* and a *duration* of *45*.\n\nThe above path data provides price and duration of the trip from Rome to Milan for each airline.\n\n```json\n{\n\t\"_key\": \"<edge hash>\",\n  \"_from\": \"locations/Roma\",\n  \"_predicate\": \"_predicate_travel-to\",\n  \"_to\": \"locations/Milano\",\n  \"_path\": [\n    \"airlines/airline-A\",\n    \"airlines/airline-B\"\n  ],\n  \"_path_data\": {\n    \"airlines/airline-A\": {\n      \"price\": 150,\n      \"duration\": 75\n    },\n    \"airlines/airline-B\": {\n      \"price\": 200,\n      \"duration\": 45\n    },\n    \"locations/Roma\": {\n      \"taxi\": 70,\n      \"duration\": 45\n    },\n    \"locations/Milano\": {\n      \"taxi\": 90,\n      \"duration\": 30\n    }\n  }\n}\n```\n\nWhile path data should reference each edge path element, it is possible to add references to other items to set data that applies to the current edge as a whole in relation to the dictionary key.\n\nThe above example is a copy of the previous example: besides the airline data here we have data for the departure location and data for the arrival location that will apply regardless of the airline. In Rome the taxi will cost 70 and the trip will last 45, while in Milan the taxi will cost 90 and the trip will last 30 minutes.\n\nSo the total cost of the trip with airline-A will be 310 and the duration will be 150, while the total cost of the trip with airline-B will be 360 and the duration will be 120.\n\n```json\n{\n\t\"_key\": \"<edge hash>\",\n\t\"_from\": \"locations/Roma\",\n\t\"_predicate\": \"_predicate_travel-to\",\n\t\"_to\": \"locations/Milano\",\n\t\"_path\": [\n\t\t\"airlines/airline-A\",\n\t\t\"airlines/airline-B\"\n\t],\n\t\"_path_data\": {\n\t\t\"airlines/airline-A\": {},\n\t\t\"airlines/airline-B\": {}\n\t}\n}\n```\n\nPath data is not required, however, dictionary services will create by default references to the path root elements having by default an empty object value. We do this so that traversals can expect the root in the path to be represented in the path data."}},"_data":{"_class":"_class_reference","_dict":{"_dict_key":{"_type_key":"_type_string_handle"},"_dict_value":{"_scalar":{"_type":"_type_object"}}}}}]