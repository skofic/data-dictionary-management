[{"_key":"_required","_code":{"_nid":"","_lid":"required","_gid":"_required","_aid":["required"]},"_info":{"_title":{"iso_639_3_eng":"Required properties"},"_definition":{"iso_639_3_eng":"Selection of required properties."},"_description":{"iso_639_3_eng":"This field contains a [descriptors selection rule](_selection-descriptors.md) that determines which *set* of *descriptors* must be *included* in the [data structure definition](_type_object.md) of the *object* for it to be considered *valid*.\n\nThe selection *values* must be the [global identifier](_gid.md) of the *descriptors* that are required to be *included* in the *object data structure*.\n\nIn order for the *object data structure* to be *valid*, its *properties* must *include* the *elements* of this *selection*."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_selection-descriptors_one\": [one, two, three],\n\t\"_selection-descriptors_any\": [red, green, blue],\n\t\"_selection-descriptors_all\": [mon. tue, wed]\n}\n```\n\nThis selection rule implies the following conditions:\n\n- At least *one* of `[red, green, blue]` is required.\n- *One* or *more* of `[odd, even] `are required.\n- *All* of `[mon, tue, wed]` are required.\n  \n\nThe following are valid:\n\n- `[red, even, mon, tue, wed]`  \n- `[green, odd, mon, tue, wed]` \n- `[blue, odd, even, mon, tue, wed]`\n  \n\nThe following are invalid:\n\n- `[even, mon, tue, wed]` \n- `[green, mon, tue, wed]`\n- `[blue, odd, even, tue, wed]`"}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_selection-descriptors"]}}},{"_key":"_recommended","_code":{"_nid":"","_lid":"recommended","_gid":"_recommended","_aid":["recommended"]},"_info":{"_title":{"iso_639_3_eng":"Recommended properties"},"_definition":{"iso_639_3_eng":"Selection of recommended properties."},"_description":{"iso_639_3_eng":"This field contains a [descriptors selection rule](_selection-descriptors.md) that determines which *set* of *descriptors* are *recommended* to be *included* in the [data structure definition](_type_object.md) of the *object*. By *recommended* it means that you are *strongly encouraged* to *include* the *selection* of *properties* in the *object*.\n\nThe selection *values* must be the [global identifier](_gid.md) of the *descriptors* that are *recommended*.\n\nIf these properties are not added to the object this doesn't mean that the object is invalid."},"_examples":{"iso_639_3_eng":"```json\n\t\"_selection-descriptors_one\": [one, two, three],\n\t\"_selection-descriptors_any\": [red, green, blue],\n\t\"_selection-descriptors_all\": [mon. tue, wed]\n}\n```\n\nThis selection rule implies the following conditions:\n\n- At least *one* of `[red, green, blue]` is recommended.\n- *One* or *more* of `[odd, even] `are recommended.\n- *All* of `[mon, tue, wed]` are recommended."}},"_data":{"_scalar":{"_type":"_type_object","_kind":["_selection-descriptors"]}}},{"_key":"_banned","_code":{"_nid":"","_lid":"banned","_gid":"_banned","_aid":["banned"]},"_info":{"_title":{"iso_639_3_eng":"Banned properties"},"_definition":{"iso_639_3_eng":"List of banned properties."},"_description":{"iso_639_3_eng":"This field contains a [descriptors selection rule](_selection-descriptors.md) that determines which *set* of *descriptors* must *not* be *included* in the [data structure definition](_type_object.md) of the *object*.\n\nThe selection *values* must be the [global identifier](_gid.md) of the *descriptors* that are *forbidden* from being *included* in the *object data structure*.\n\nThis rule should be evaluated at the *end* of the *validation workflow* and should *not trigger* an *error*: all banned properties should simply be *removed*."}},"_data":{"_class":"_class_reference","_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-descriptor"]}}}},{"_key":"_computed","_code":{"_nid":"","_lid":"computed","_gid":"_computed","_aid":["computed"]},"_info":{"_title":{"iso_639_3_eng":"Computed properties"},"_definition":{"iso_639_3_eng":"List of computed properties."},"_description":{"iso_639_3_eng":"This field contains the list of *properties* that are automatically *computed*, their value is *calculated* before *storing* the *record*."}},"_data":{"_class":"_class_reference","_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-descriptor"]}}}},{"_key":"_selection-terms_one","_code":{"_nid":"_selection-terms","_lid":"one","_gid":"_selection-terms_one","_aid":["one"]},"_info":{"_title":{"iso_639_3_eng":"One of"},"_definition":{"iso_639_3_eng":"Selection should contain one term from the array."},"_description":{"iso_639_3_eng":"The rule determines that *one* of the terms in the *array* should be part of the *selection*.\n\nThe *terms* of the *set* are represented by their *global identifiers*."}},"_data":{"_class":"_class_reference","_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-term"]}}}},{"_key":"_selection-terms_one-none","_code":{"_nid":"_selection-terms","_lid":"one-none","_gid":"_selection-terms_one-none","_aid":["one-none"]},"_info":{"_title":{"iso_639_3_eng":"One of or none"},"_definition":{"iso_639_3_eng":"Selection should contain one term from the set or none."},"_description":{"iso_639_3_eng":"The rule determines that either *one* of the terms in the *set* should be part of the *selection*, or the selection should be empty.\n\nThe *terms* of the *set* are represented by their *global identifiers*."}},"_data":{"_class":"_class_reference","_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-term"]}}}},{"_key":"_selection-terms_any","_code":{"_nid":"_selection-terms","_lid":"any","_gid":"_selection-terms_any","_aid":["any"]},"_info":{"_title":{"iso_639_3_eng":"Any of"},"_definition":{"iso_639_3_eng":"Selection should contain one or more terms from the set."},"_description":{"iso_639_3_eng":"The rule determines that *one* or *more* of the terms in the *set* should be part of the *selection*.\n\nThe *terms* of the *set* are represented by their *global identifiers*."}},"_data":{"_class":"_class_reference","_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-term"]}}}},{"_key":"_selection-terms_one-none-of","_code":{"_nid":"_selection-terms","_lid":"one-none-of","_gid":"_selection-terms_one-none-of","_aid":["one-none-of"]},"_info":{"_title":{"iso_639_3_eng":"Any one of"},"_definition":{"iso_639_3_eng":"The selection should include one element from each of list of sets and one or more of the elements from that selection will become the result."},"_description":{"iso_639_3_eng":"This descriptor contains a *parent array* that contains a *list* of *sets*: the rule determines that at most *one element* should be selected from *each* of the *child sets* and *one* or *more* elements of that selection will become the *result*. It is like combining an [any](_selection-terms_any) selection with a [one](_selection-terms_one) selection.\n\nThe *terms* in the *child sets* are represented by their [global identifiers](_gid)."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_selection-terms_one-none-of\": [\n\t\t[\"red\", \"green\", \"blue\"],\n\t\t[\"Monday\", \"Tuesday\"]\n\t]\n}\n```\n\nThis example implements a selection of colours for Monday or Tuesday:\n\n- In the *child sets* selection you choose *one* from each, that is: `red`, `green` or `blue` from the *first* set of colours and `Monday` or `Tuesday` fron the `second` weekdays set.\n  \n- Once the selection of elements in the *child sets* has been done, the result will become *one* or *more* elements of the *child sets selection*.\n  \n\nSo some possible results could be:\n\n- `[\"red\", \"Monday\"]`\n- `[\"green\"]`\n- `[Tuesday\"]`\n- `[\"blue\", \"Tuesday\"]`"}},"_data":{"_class":"_class_reference","_array":{"_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-term"]}}}}},{"_key":"_selection-terms_all","_code":{"_nid":"_selection-terms","_lid":"all","_gid":"_selection-terms_all","_aid":["all"]},"_info":{"_title":{"iso_639_3_eng":"All of"},"_definition":{"iso_639_3_eng":"Selection should contain all terms from the set."},"_description":{"iso_639_3_eng":"The rule determines that *all* of the terms in the *set* should be part of the *selection*.\n\nTThe *terms* of the *set* are represented by their *global identifiers*."}},"_data":{"_class":"_class_reference","_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-term"]}}}},{"_key":"_selection-descriptors_one","_code":{"_nid":"_selection-descriptors","_lid":"one","_gid":"_selection-descriptors_one","_aid":["one"]},"_info":{"_title":{"iso_639_3_eng":"One of"},"_definition":{"iso_639_3_eng":"Selection should contain one descriptor from the set."},"_description":{"iso_639_3_eng":"The rule determines that *one* of the descriptors in the *set* should be part of the *selection*.\n\nThe *descriptors* of the *set* are represented by their *global identifiers*."}},"_data":{"_class":"_class_reference","_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-descriptor"]}}}},{"_key":"_selection-descriptors_one-none","_code":{"_nid":"_selection-descriptors","_lid":"one-none","_gid":"_selection-descriptors_one-none","_aid":["one-none"]},"_info":{"_title":{"iso_639_3_eng":"One of or none"},"_definition":{"iso_639_3_eng":"Selection should contain one descriptor from the set or none."},"_description":{"iso_639_3_eng":"The rule determines that either *one* of the descriptors in the *set* should be part of the *selection*, or the selection should be empty.\n\nThe *descriptors* of the *set* are represented by their *global identifiers*."}},"_data":{"_class":"_class_reference","_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-descriptor"]}}}},{"_key":"_selection-descriptors_any","_code":{"_nid":"_selection-descriptors","_lid":"any","_gid":"_selection-descriptors_any","_aid":["any"]},"_info":{"_title":{"iso_639_3_eng":"Any of"},"_definition":{"iso_639_3_eng":"Selection should contain one or more descriptors from the set."},"_description":{"iso_639_3_eng":"The rule determines that *one* or *more* of the descriptors in the *set* should be part of the *selection*.\n\nThe *descriptors* of the *set* are represented by their *global identifiers*."}},"_data":{"_class":"_class_reference","_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-descriptor"]}}}},{"_key":"_selection-descriptors_all","_code":{"_nid":"_selection-descriptors","_lid":"all","_gid":"_selection-descriptors_all","_aid":["all"]},"_info":{"_title":{"iso_639_3_eng":"All of"},"_definition":{"iso_639_3_eng":"Selection should contain all descriptors from the set."},"_description":{"iso_639_3_eng":"The rule determines that *all* of the descriptors in the *set* should be part of the *selection*.\n\nTThe *descriptors* of the *set* are represented by their *global identifiers*."}},"_data":{"_class":"_class_reference","_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-descriptor"]}}}},{"_key":"_selection-descriptors_one-none-of","_code":{"_nid":"_selection-descriptors","_lid":"one-none-of","_gid":"_selection-descriptors_one-none-of","_aid":["one-none-of"]},"_info":{"_title":{"iso_639_3_eng":"One of any in list"},"_definition":{"iso_639_3_eng":"The selection should include one or no element from each of the list of sets"},"_description":{"iso_639_3_eng":"This descriptor contains a *list* of *sets*: the rule determines that *one element*, or *no elements* should be selected from *each* of the *child sets*.\n\nThe *descriptors* in the *child sets* are represented by their [global identifiers](_gid.md)."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_selection-descriptors_one-none-of\": [\n\t\t[\"minimum_inclusive\", \"minimum_exclusive\"],\n\t\t[\"maximum_inclusive\", \"maximum_exclusive\"]\n\t]\n}\n```\n\nThis example implements a selection for a range:\n\n- In the *child sets* selection you choose *one* or *none* from each, that is: `minimum_inclusive` or `minimum_exclusive` or *none* from the *first* set and `maximum_inclusive` or `maximum_exclusive` or *none* fron the `second` set.\n- The final selection of elements must include *at least one choice*.\n\nSo the possible results could be:\n\n- `[\"minimum_inclusive\"]`\n- `[\"minimum_exclusive\"]`\n- `[\"maximum_inclusive\"]`\n- `[\"maximum_exclusive\"]`\n- `[\"minimum_inclusive\", \"maximum_inclusive\"]`\n- `[\"minimum_inclusive\", \"maximum_exclusive\"]`\n- `[\"minimum_exclusive\", \"maximum_inclusive\"]`\n- `[\"minimum_exclusive\", \"maximum_exclusive\"]`"}},"_data":{"_class":"_class_reference","_array":{"_set":{"_set_scalar":{"_set_type":"_type_string_key","_kind":["_any-descriptor"]}}}}},{"_key":"_selection-values_one","_code":{"_nid":"_selection-values","_lid":"one","_gid":"_selection-values_one","_aid":["one"]},"_info":{"_title":{"iso_639_3_eng":"One of"},"_definition":{"iso_639_3_eng":"Selection should contain one value from the array."},"_description":{"iso_639_3_eng":"The rule determines that *one* of the values in the *set* should be part of the *selection*."}},"_data":{"_set":{}}},{"_key":"_selection-values_one-none","_code":{"_nid":"_selection-values","_lid":"one-none","_gid":"_selection-values_one-none","_aid":["one-none"]},"_info":{"_title":{"iso_639_3_eng":"One of or none"},"_definition":{"iso_639_3_eng":"Selection should contain one value from the set or none."},"_description":{"iso_639_3_eng":"The rule determines that either *one* of the values in the *set* should be part of the *selection*, or the selection should be empty."}},"_data":{"_set":{}}},{"_key":"_selection-values_any","_code":{"_nid":"_selection-values","_lid":"any","_gid":"_selection-values_any","_aid":["any"]},"_info":{"_title":{"iso_639_3_eng":"Any of"},"_definition":{"iso_639_3_eng":"Selection should contain one or more values from the set."},"_description":{"iso_639_3_eng":"The rule determines that *one* or *more* values in the *set* should be part of the *selection*."}},"_data":{"_set":{}}},{"_key":"_selection-values_one-none-of","_code":{"_nid":"_selection-values","_lid":"one-none-of","_gid":"_selection-values_one-none-of","_aid":["one-none-of"]},"_info":{"_title":{"iso_639_3_eng":"Any one of"},"_definition":{"iso_639_3_eng":"The selection should include one element from each of list of sets and one or more of the elements from that selection will become the result."},"_description":{"iso_639_3_eng":"This descriptor contains a *parent array* that contains a *list* of *sets*: the rule determines that at most *one element* should be selected from *each* of the *child sets* and *one* or *more* elements of that selection will become the *result*. It is like combining an [any](_selection-valuesany) selection with a [one](_selection-values_one) selection.\n\nThe *values* in the *child sets* can be any value."},"_examples":{"iso_639_3_eng":"```json\n{\n\t\"_selection-terms_one-none-of\": [\n\t\t[\"red\", \"green\", \"blue\"],\n\t\t[\"Monday\", \"Tuesday\"]\n\t]\n}\n```\n\nThis example implements a selection of colours for Monday or Tuesday:\n\n- In the *child sets* selection you choose *one* from each, that is: `red`, `green` or `blue` from the *first* set of colours and `Monday` or `Tuesday` fron the `second` weekdays set.\n  \n- Once the selection of elements in the *child sets* has been done, the result will become *one* or *more* elements of the *child sets selection*.\n  \n\nSo some possible results could be:\n\n- `[\"red\", \"Monday\"]`\n- `[\"green\"]`\n- `[Tuesday\"]`\n- `[\"blue\", \"Tuesday\"]`"}},"_data":{"_array":{"_set":{}}}},{"_key":"_selection-values_all","_code":{"_nid":"_selection-values","_lid":"all","_gid":"_selection-values_all","_aid":["all"]},"_info":{"_title":{"iso_639_3_eng":"All of"},"_definition":{"iso_639_3_eng":"Selection should contain all values from the set."},"_description":{"iso_639_3_eng":"The rule determines that *all* of the values in the *set* should be part of the *selection*."}},"_data":{"_set":{}}}]